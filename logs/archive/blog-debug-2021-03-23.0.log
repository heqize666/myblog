2021-03-23 11:38:20.560 DEBUG [main]com.jg.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2021-03-23 11:39:41.607 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2021-03-23 11:39:41.664 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2021-03-23 11:39:41.740 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2021-03-23 11:39:41.856 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:39:41.859 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=1234565)](String), 1(Integer), null, POST(String), 223(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2021-03-23 11:39:41.890 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:41:12.989 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2021-03-23 11:41:12.990 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2021-03-23 11:41:12.992 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2021-03-23 11:41:13.033 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:41:13.034 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)](String), 1(Integer), null, POST(String), 46(Long), {"code":20000,"data":{"token":"68A9086057C838741B994DF22BE2DBBC"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:41:13.040 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:41:13.095 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:41:13.096 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:41:13.106 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:41:13.501 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2021-03-23 11:41:13.502 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2021-03-23 11:41:13.505 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 1
2021-03-23 11:41:13.512 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:41:13.513 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:41:13.523 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:41:15.660 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2021-03-23 11:41:15.660 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 11:41:15.662 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 1
2021-03-23 11:41:15.671 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:41:15.672 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:41:15.677 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:41:17.962 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2021-03-23 11:41:17.963 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 11:41:17.969 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 11:41:17.970 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 11:41:17.970 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 11:41:17.972 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:41:17.991 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:41:17.991 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 79(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-01-07 14:39:32"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:41:17.996 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:41:18.151 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2021-03-23 11:41:18.152 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 11:41:18.153 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 1
2021-03-23 11:41:18.158 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:41:18.159 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:41:18.169 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:41:22.855 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2021-03-23 11:41:22.855 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2021-03-23 11:41:22.858 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2021-03-23 11:41:22.863 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:41:22.865 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:41:22.873 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:41:25.544 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2021-03-23 11:41:25.545 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 11:41:25.548 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 11:41:25.553 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2021-03-23 11:41:25.553 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 11:41:25.554 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:41:25.562 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:41:25.563 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 43(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:04:02","name":"hqz","nickname":"鲜肉","sex":1,"updateTime":"2021-01-03 14:12:46","userId":1,"username":"he"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:41:25.574 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:41:31.282 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2021-03-23 11:41:31.282 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 11:41:31.283 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 1
2021-03-23 11:41:31.289 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:41:31.290 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:41:31.300 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:41:35.538 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2021-03-23 11:41:35.539 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 11:41:35.540 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 1
2021-03-23 11:41:35.545 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:41:35.546 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 38(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:41:35.556 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:41:35.894 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2021-03-23 11:41:35.895 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 11:41:35.897 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 11:41:35.898 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 11:41:35.898 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 11:41:35.900 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:41:35.906 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:41:35.907 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 14(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-01-07 14:39:32"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:41:35.912 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:41:36.195 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2021-03-23 11:41:36.196 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 11:41:36.197 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 1
2021-03-23 11:41:36.204 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:41:36.206 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:41:36.216 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:41:37.657 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2021-03-23 11:41:37.658 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 11:41:37.859 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 1
2021-03-23 11:41:37.865 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:41:37.866 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 208(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:41:37.875 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:41:39.127 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2021-03-23 11:41:39.128 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 11:41:39.128 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2021-03-23 11:41:39.129 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 11:41:39.131 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 11:41:39.132 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 1
2021-03-23 11:41:39.132 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 11:41:39.133 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 11:41:39.134 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:41:39.137 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:41:39.138 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:41:39.140 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:41:39.143 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 16(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-01-07 14:39:32"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:41:39.149 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:41:39.152 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:41:40.548 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2021-03-23 11:41:40.548 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2021-03-23 11:41:40.550 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2021-03-23 11:41:40.555 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:41:40.556 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 8(Long), {"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:41:40.569 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:41:42.264 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==>  Preparing: select user_id, username, name, sex, header, nickname, user_email, created_time, update_time from bl_user where deleted = 0 limit ?, ? 
2021-03-23 11:41:42.265 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 11:41:42.267 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.UserMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 11:41:42.271 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_user where deleted = 0 
2021-03-23 11:41:42.271 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 11:41:42.272 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.UserMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:41:42.276 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:41:42.277 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 14(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:04:02","name":"hqz","nickname":"鲜肉","sex":1,"updateTime":"2021-01-03 14:12:46","userId":1,"username":"he"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:41:42.287 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:41:43.090 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2021-03-23 11:41:43.090 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 11:41:43.092 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 1
2021-03-23 11:41:43.096 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:41:43.097 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:41:43.108 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:43:10.355 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2021-03-23 11:43:10.355 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 11:43:10.357 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 11:43:10.358 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 11:43:10.358 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 11:43:10.359 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:43:10.360 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where deleted = 0 
2021-03-23 11:43:10.361 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 11:43:10.364 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:43:10.365 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 1
2021-03-23 11:43:10.365 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 13(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-01-07 14:39:32"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:43:10.370 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:43:10.372 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:43:10.373 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/listBack(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:43:10.378 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:48:11.137 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2021-03-23 11:48:11.138 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 11:48:11.144 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 11:48:11.148 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2021-03-23 11:48:11.149 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 11:48:11.157 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:48:11.165 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:48:11.166 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 30(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":259,"totalPage":26},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:48:11.179 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:48:22.027 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 11:48:22.028 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2021-03-23 11:48:22.032 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 11:48:22.036 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 11:48:22.036 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 1(Integer)
2021-03-23 11:48:22.038 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:48:22.042 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:48:22.043 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=26, totalCount=259, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={logStatus=1}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 19(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":1},"sortMethod":"asc","totalCount":248,"totalPage":25},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:48:22.071 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:48:25.703 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 11:48:25.703 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 0(Integer), 10(Integer)
2021-03-23 11:48:25.707 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 11:48:25.713 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 11:48:25.713 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 0(Integer)
2021-03-23 11:48:25.714 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:48:25.720 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:48:25.721 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=25, totalCount=248, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 17(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:48:25.740 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:48:30.491 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? and log_method = ? limit ?, ? 
2021-03-23 11:48:30.491 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), GET(String), 0(Integer), 10(Integer)
2021-03-23 11:48:30.494 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 4
2021-03-23 11:48:30.498 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? and log_method = ? 
2021-03-23 11:48:30.498 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 0(Integer), GET(String)
2021-03-23 11:48:30.499 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:48:30.504 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:48:30.505 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:48:30.613 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:48:30.614 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:48:54.672 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? and log_method = ? limit ?, ? 
2021-03-23 11:48:54.672 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), GET(String), 0(Integer), 10(Integer)
2021-03-23 11:48:54.675 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 4
2021-03-23 11:48:54.678 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? and log_method = ? 
2021-03-23 11:48:54.679 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 0(Integer), GET(String)
2021-03-23 11:48:54.680 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:48:54.684 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:48:54.685 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 14(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:48:54.694 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:48:54.695 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:49:01.899 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 11:49:01.900 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 0(Integer), 10(Integer)
2021-03-23 11:49:01.903 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 11:49:01.907 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 11:49:01.908 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 0(Integer)
2021-03-23 11:49:01.909 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:49:01.914 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:49:01.915 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=0, logMethod=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":0,"logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:49:01.924 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:49:01.926 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=0, logMethod=}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":0,"logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:49:11.841 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 11:49:11.842 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 0(Integer), 10(Integer)
2021-03-23 11:49:11.845 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 11:49:11.849 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 11:49:11.850 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 0(Integer)
2021-03-23 11:49:11.851 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:49:11.857 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:49:11.859 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=0, logMethod=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":0,"logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:49:11.866 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:49:11.868 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=0, logMethod=}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":0,"logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:49:16.787 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:49:16.788 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 1(Long), {"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:49:16.937 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:49:17.142 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2021-03-23 11:49:17.142 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 11:49:17.146 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 11:49:17.150 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2021-03-23 11:49:17.150 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 11:49:17.152 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:49:17.153 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2021-03-23 11:49:17.157 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:49:17.159 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2021-03-23 11:49:17.160 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":263,"totalPage":27},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:49:17.161 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 1
2021-03-23 11:49:17.166 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:49:17.167 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 19(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:49:17.308 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:49:17.353 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:49:21.999 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 11:49:22.000 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 0(Integer), 10(Integer)
2021-03-23 11:49:22.003 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 11:49:22.007 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 11:49:22.007 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 0(Integer)
2021-03-23 11:49:22.008 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:49:22.014 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:49:22.015 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=27, totalCount=263, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:49:22.118 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:50:15.983 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? and log_method = ? limit ?, ? 
2021-03-23 11:50:15.985 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), GET(String), 0(Integer), 10(Integer)
2021-03-23 11:50:16.003 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 4
2021-03-23 11:50:16.054 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? and log_method = ? 
2021-03-23 11:50:16.056 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 0(Integer), GET(String)
2021-03-23 11:50:16.060 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:50:19.701 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:50:19.703 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 15383(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:50:19.710 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:50:19.711 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:51:28.738 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? and log_method = ? limit ?, ? 
2021-03-23 11:51:28.740 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), GET(String), 0(Integer), 10(Integer)
2021-03-23 11:51:28.758 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 4
2021-03-23 11:51:35.364 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? and log_method = ? 
2021-03-23 11:51:35.366 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 0(Integer), GET(String)
2021-03-23 11:51:35.370 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:52:02.048 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:52:02.049 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 68230(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:52:02.057 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:52:02.058 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:52:27.418 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? and log_method = ? limit ?, ? 
2021-03-23 11:52:27.420 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), GET(String), 0(Integer), 10(Integer)
2021-03-23 11:52:27.444 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 4
2021-03-23 11:52:29.243 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? and log_method = ? 
2021-03-23 11:52:29.245 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: (String), GET(String)
2021-03-23 11:52:29.249 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:52:33.407 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:52:33.408 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 10727(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":"","logMethod":"GET"},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:52:33.416 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:52:33.417 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":"","logMethod":"GET"},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:53:31.819 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? and log_method = ? limit ?, ? 
2021-03-23 11:53:31.819 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), POST(String), 0(Integer), 10(Integer)
2021-03-23 11:53:31.823 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 8
2021-03-23 11:53:31.826 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? and log_method = ? 
2021-03-23 11:53:31.827 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: (String), POST(String)
2021-03-23 11:53:31.828 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:53:34.245 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:53:34.246 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=POST}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 2427(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:33:22","logId":220,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:39:32","logId":221,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java基础知识\"}],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":"POST"},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:53:34.255 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:53:34.257 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=POST}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:33:22","logId":220,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:39:32","logId":221,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java基础知识\"}],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":"POST"},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:53:40.127 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 11:53:40.128 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2021-03-23 11:53:40.131 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 11:53:40.135 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 11:53:40.136 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 1(Integer)
2021-03-23 11:53:40.137 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:53:41.771 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:53:41.772 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=1, logMethod=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 1645(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":1,"logMethod":""},"sortMethod":"asc","totalCount":254,"totalPage":26},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:53:41.780 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:53:41.782 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=1, logMethod=}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":1,"logMethod":""},"sortMethod":"asc","totalCount":254,"totalPage":26},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:54:21.608 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:54:21.609 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), GET(String), 1(Long), {"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:54:21.910 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:54:22.101 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2021-03-23 11:54:22.101 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 11:54:22.104 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 11:54:22.108 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2021-03-23 11:54:22.109 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 11:54:22.110 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:54:26.437 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2021-03-23 11:54:26.439 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2021-03-23 11:54:26.440 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 1
2021-03-23 11:54:26.441 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:54:26.442 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 4341(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":267,"totalPage":27},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:54:26.445 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:54:26.446 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 4336(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:54:26.452 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:54:26.464 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:54:32.963 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_method = ? limit ?, ? 
2021-03-23 11:54:32.963 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: GET(String), 0(Integer), 10(Integer)
2021-03-23 11:54:32.965 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 11:54:32.968 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_method = ? 
2021-03-23 11:54:32.969 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: GET(String)
2021-03-23 11:54:32.970 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:54:32.974 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:54:32.974 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=27, totalCount=267, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 17(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:31:21","logId":11,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"id\":1,\"name\":\"he\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":10,"logUrl":"/admin/getAdmin"},{"createdTime":"2020-12-24 11:33:21","logId":12,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:40:29","logId":15,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":3,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 13:52:51","logId":19,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":3,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:01:47","logId":20,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:06:39","logId":22,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:06:52","logId":24,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":3,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:08:03","logId":26,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logMethod":"GET"},"sortMethod":"asc","totalCount":157,"totalPage":16},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:54:32.988 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:54:56.599 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? and log_method = ? limit ?, ? 
2021-03-23 11:54:56.600 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), GET(String), 0(Integer), 10(Integer)
2021-03-23 11:54:56.602 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 4
2021-03-23 11:54:56.606 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? and log_method = ? 
2021-03-23 11:54:56.607 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 0(Integer), GET(String)
2021-03-23 11:54:56.608 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:54:56.612 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:54:56.613 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=16, totalCount=157, list=[Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=11, logUrl=/admin/getAdmin, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=10, logResult={"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:31:21), Log(logId=12, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:33:21), Log(logId=15, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=3, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:40:29), Log(logId=19, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=3, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 13:52:51), Log(logId=20, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 14:01:47), Log(logId=22, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 14:06:39), Log(logId=24, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=3, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 14:06:52), Log(logId=26, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 14:08:03)], params={logMethod=GET, logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logMethod":"GET","logStatus":0},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:54:56.623 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 11:55:04.334 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 11:55:04.335 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 0(Integer), 10(Integer)
2021-03-23 11:55:04.337 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 11:55:04.341 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 11:55:04.341 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 0(Integer)
2021-03-23 11:55:04.343 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:55:04.347 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:55:04.348 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=4, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02)], params={logMethod=, logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 14(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logMethod":"","logStatus":0},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:55:04.356 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:55:04.357 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=4, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02)], params={logMethod=, logStatus=0}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logMethod":"","logStatus":0},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:55:31.079 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? and log_method = ? limit ?, ? 
2021-03-23 11:55:31.079 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), POST(String), 0(Integer), 10(Integer)
2021-03-23 11:55:31.083 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 8
2021-03-23 11:55:31.087 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? and log_method = ? 
2021-03-23 11:55:31.088 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 0(Integer), POST(String)
2021-03-23 11:55:31.089 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:55:31.095 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:55:31.096 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=4, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02)], params={logMethod=POST, logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 18(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:33:22","logId":220,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:39:32","logId":221,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java基础知识\"}],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logMethod":"POST","logStatus":0},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:55:31.103 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:55:31.104 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=4, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02)], params={logMethod=POST, logStatus=0}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:33:22","logId":220,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:39:32","logId":221,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java基础知识\"}],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logMethod":"POST","logStatus":0},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:56:16.959 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? and log_method = ? limit ?, ? 
2021-03-23 11:56:16.959 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), POST(String), 0(Integer), 10(Integer)
2021-03-23 11:56:16.962 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 8
2021-03-23 11:56:16.966 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? and log_method = ? 
2021-03-23 11:56:16.967 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 0(Integer), POST(String)
2021-03-23 11:56:16.968 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 11:56:16.973 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:56:16.974 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=4, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02)], params={logMethod=POST, logStatus=0}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:33:22","logId":220,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:39:32","logId":221,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java基础知识\"}],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logMethod":"POST","logStatus":0},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 11:56:16.982 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 11:56:16.983 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=4, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02)], params={logMethod=POST, logStatus=0}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:33:22","logId":220,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:39:32","logId":221,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java基础知识\"}],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logMethod":"POST","logStatus":0},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:23:40.395 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2021-03-23 13:23:40.398 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2021-03-23 13:23:40.404 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2021-03-23 13:23:40.412 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:23:40.413 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)](String), 1(Integer), null, POST(String), 29(Long), {"code":20000,"data":{"token":"4FB6D7130AE12D33781C4510536282FF"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:23:40.434 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:23:40.471 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:23:40.472 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:23:40.482 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:23:40.958 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2021-03-23 13:23:40.959 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 13:23:40.961 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:23:40.965 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2021-03-23 13:23:40.966 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2021-03-23 13:23:40.968 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 1
2021-03-23 13:23:40.970 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2021-03-23 13:23:40.971 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 13:23:40.973 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:23:40.975 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:23:40.976 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:23:40.980 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:23:40.982 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 24(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":273,"totalPage":28},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:23:40.986 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:23:40.989 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:23:42.841 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2021-03-23 13:23:42.841 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 13:23:42.843 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:23:42.859 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2021-03-23 13:23:42.860 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 13:23:42.861 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:23:42.869 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:23:42.870 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=28, totalCount=273, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 28(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":275,"totalPage":28},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:23:42.885 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:23:46.034 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 13:23:46.034 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2021-03-23 13:23:46.036 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:23:46.042 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 13:23:46.043 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 1(Integer)
2021-03-23 13:23:46.045 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:23:46.052 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:23:46.053 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=28, totalCount=275, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={logStatus=1}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 56(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":1},"sortMethod":"asc","totalCount":264,"totalPage":27},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:23:46.064 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:23:48.144 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 13:23:48.145 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), 0(Integer), 10(Integer)
2021-03-23 13:23:48.148 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:23:48.154 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 13:23:48.154 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: (String)
2021-03-23 13:23:48.156 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:23:48.164 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:23:48.167 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=27, totalCount=264, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={logStatus=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 20(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:23:48.188 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:23:50.373 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? and log_method = ? limit ?, ? 
2021-03-23 13:23:50.373 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), GET(String), 0(Integer), 10(Integer)
2021-03-23 13:23:50.377 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 4
2021-03-23 13:23:50.382 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? and log_method = ? 
2021-03-23 13:23:50.383 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: (String), GET(String)
2021-03-23 13:23:50.384 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:23:50.389 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:23:50.391 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 27(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":"","logMethod":"GET"},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:23:50.405 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:23:50.408 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":"","logMethod":"GET"},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:23:56.445 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? and log_method = ? limit ?, ? 
2021-03-23 13:23:56.446 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), POST(String), 0(Integer), 10(Integer)
2021-03-23 13:23:56.449 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 8
2021-03-23 13:23:56.455 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? and log_method = ? 
2021-03-23 13:23:56.455 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: (String), POST(String)
2021-03-23 13:23:56.456 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:23:56.464 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:23:56.467 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=POST}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 34(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:33:22","logId":220,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:39:32","logId":221,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java基础知识\"}],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":"POST"},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:23:56.491 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:23:56.493 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=POST}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:33:22","logId":220,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:39:32","logId":221,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java基础知识\"}],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":"POST"},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:23:58.829 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 13:23:58.830 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), 0(Integer), 10(Integer)
2021-03-23 13:23:58.835 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:23:58.841 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 13:23:58.841 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: (String)
2021-03-23 13:23:58.841 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:23:58.850 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:23:58.855 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 25(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:23:58.868 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:23:58.870 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:24:18.393 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? and log_method = ? limit ?, ? 
2021-03-23 13:24:18.394 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), GET(String), 0(Integer), 10(Integer)
2021-03-23 13:24:18.395 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 4
2021-03-23 13:24:18.406 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? and log_method = ? 
2021-03-23 13:24:18.407 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: (String), GET(String)
2021-03-23 13:24:18.408 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:24:18.416 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:24:18.419 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 26(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":"","logMethod":"GET"},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:24:18.433 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:24:18.436 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=GET}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":"","logMethod":"GET"},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:24:29.992 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 13:24:29.993 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), 0(Integer), 10(Integer)
2021-03-23 13:24:29.996 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:24:30.002 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 13:24:30.003 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: (String)
2021-03-23 13:24:30.004 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:24:30.014 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:24:30.016 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 24(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:24:30.031 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:24:30.034 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:25:42.056 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 13:25:42.057 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), 0(Integer), 10(Integer)
2021-03-23 13:25:42.060 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:25:42.075 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 13:25:42.076 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: (String)
2021-03-23 13:25:42.077 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:26:19.034 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:26:19.037 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 35(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:26:34.417 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:26:34.420 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:27:57.293 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 13:27:57.293 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), 0(Integer), 10(Integer)
2021-03-23 13:27:57.298 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:27:57.303 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 13:27:57.304 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: (String)
2021-03-23 13:27:57.305 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:28:01.327 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:28:01.329 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 22(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:28:01.342 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:28:01.345 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:28:38.501 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 13:28:38.502 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), 0(Integer), 10(Integer)
2021-03-23 13:28:38.505 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:28:38.512 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 13:28:38.513 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: (String)
2021-03-23 13:28:38.514 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:30:03.194 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:30:03.207 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 26(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:30:04.091 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:30:04.094 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:30:57.823 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:30:57.825 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), GET(String), 2(Long), {"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:30:57.971 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:30:58.186 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2021-03-23 13:30:58.187 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 13:30:58.190 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:30:58.190 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2021-03-23 13:30:58.191 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2021-03-23 13:30:58.192 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 1
2021-03-23 13:30:58.198 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2021-03-23 13:30:58.199 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 13:30:58.200 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:30:58.201 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:30:58.201 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), GET(String), 22(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:30:58.212 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:30:58.213 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 30(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":279,"totalPage":28},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:30:58.217 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:30:58.220 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:31:11.234 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_method = ? limit ?, ? 
2021-03-23 13:31:11.235 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: POST(String), 0(Integer), 10(Integer)
2021-03-23 13:31:11.237 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:31:11.242 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_method = ? 
2021-03-23 13:31:11.243 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: POST(String)
2021-03-23 13:31:11.244 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:31:11.250 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:31:11.251 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=28, totalCount=279, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={logMethod=POST}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 18(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:35:21","logId":13,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:36:13","logId":14,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"}],"pageSize":10,"params":{"logMethod":"POST"},"sortMethod":"asc","totalCount":117,"totalPage":12},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:31:11.260 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:31:32.777 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? and log_method = ? limit ?, ? 
2021-03-23 13:31:32.778 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 1(Integer), POST(String), 0(Integer), 10(Integer)
2021-03-23 13:31:32.780 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:31:32.786 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? and log_method = ? 
2021-03-23 13:31:32.787 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 1(Integer), POST(String)
2021-03-23 13:31:32.788 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:31:32.795 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:31:32.796 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=12, totalCount=117, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=13, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:35:21), Log(logId=14, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:36:13)], params={logMethod=POST, logStatus=1}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 22(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:35:21","logId":13,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:36:13","logId":14,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"}],"pageSize":10,"params":{"logMethod":"POST","logStatus":1},"sortMethod":"asc","totalCount":110,"totalPage":11},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:31:32.808 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:32:32.632 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 13:32:32.636 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), 0(Integer), 10(Integer)
2021-03-23 13:32:32.640 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:32:32.668 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 13:32:32.670 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: (String)
2021-03-23 13:32:32.672 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:32:32.693 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:32:32.703 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 58(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:32:32.724 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:32:36.794 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 13:32:36.795 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), 0(Integer), 10(Integer)
2021-03-23 13:32:36.801 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:32:36.812 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 13:32:36.813 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: (String)
2021-03-23 13:32:36.817 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:32:36.841 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:32:36.845 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 64(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:32:36.873 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:32:36.876 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:34:18.619 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 13:34:18.619 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), 0(Integer), 10(Integer)
2021-03-23 13:34:18.622 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:34:18.625 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 13:34:18.626 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: (String)
2021-03-23 13:34:18.627 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:34:18.632 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:34:18.633 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 62290(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:34:18.641 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:34:18.642 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:34:40.953 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2021-03-23 13:34:40.956 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 13:34:40.983 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:34:41.035 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2021-03-23 13:34:41.036 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 13:34:41.040 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:34:42.419 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:34:42.420 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 11347(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":284,"totalPage":29},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:34:42.431 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:35:00.852 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_method = ? limit ?, ? 
2021-03-23 13:35:00.855 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: POST(String), 0(Integer), 10(Integer)
2021-03-23 13:35:00.882 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:35:00.934 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_method = ? 
2021-03-23 13:35:00.936 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: POST(String)
2021-03-23 13:35:00.939 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:35:06.605 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:35:06.606 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={logMethod=POST}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 16469(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:35:21","logId":13,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:36:13","logId":14,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"}],"pageSize":10,"params":{"logMethod":"POST"},"sortMethod":"asc","totalCount":121,"totalPage":13},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:35:06.633 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:36:37.572 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2021-03-23 13:36:37.574 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 13:36:37.602 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:36:50.629 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2021-03-23 13:36:50.631 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 13:36:50.635 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:37:10.781 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:37:10.782 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={logMethod=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 119750(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logMethod":""},"sortMethod":"asc","totalCount":286,"totalPage":29},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:37:10.794 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:37:26.516 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 13:37:26.516 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2021-03-23 13:37:26.518 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:37:26.522 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 13:37:26.523 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 1(Integer)
2021-03-23 13:37:26.524 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:37:27.401 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:37:27.401 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={logMethod=, logStatus=1}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 4009(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logMethod":"","logStatus":1},"sortMethod":"asc","totalCount":275,"totalPage":28},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:37:27.419 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:37:35.211 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 13:37:35.212 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), 0(Integer), 10(Integer)
2021-03-23 13:37:35.215 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:37:35.219 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 13:37:35.219 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: (String)
2021-03-23 13:37:35.220 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:37:35.899 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:37:35.900 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=28, totalCount=275, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={logMethod=, logStatus=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 2828(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logMethod":"","logStatus":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:37:35.917 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:38:04.447 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? and log_method = ? limit ?, ? 
2021-03-23 13:38:04.448 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), POST(String), 0(Integer), 10(Integer)
2021-03-23 13:38:04.450 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 8
2021-03-23 13:38:04.453 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? and log_method = ? 
2021-03-23 13:38:04.454 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: (String), POST(String)
2021-03-23 13:38:04.455 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:38:06.248 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:38:06.249 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logMethod=POST, logStatus=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 10438(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:33:22","logId":220,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:39:32","logId":221,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java基础知识\"}],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logMethod":"POST","logStatus":""},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:38:06.257 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:38:06.258 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logMethod=POST, logStatus=}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:33:22","logId":220,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:39:32","logId":221,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java基础知识\"}],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logMethod":"POST","logStatus":""},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:38:45.821 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? and log_method = ? limit ?, ? 
2021-03-23 13:38:45.821 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), POST(String), 0(Integer), 10(Integer)
2021-03-23 13:38:45.823 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 8
2021-03-23 13:38:45.828 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? and log_method = ? 
2021-03-23 13:38:45.828 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: (String), POST(String)
2021-03-23 13:38:45.830 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:41:46.890 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:41:46.892 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logMethod=POST, logStatus=}, sortColumn=null, sortMethod=asc)](String), 1(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:33:22","logId":220,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:39:32","logId":221,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java基础知识\"}],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logMethod":"POST","logStatus":""},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:41:58.338 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:41:58.339 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logMethod=POST, logStatus=}, sortColumn=null, sortMethod=asc)](String), 0(Integer), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
### The error may involve com.jg.blog.mapper.LogMapper.save-Inline
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
	at com.jg.blog.service.impl.LogServiceImpl.save(LogServiceImpl.java:38)
	at com.jg.blog.aspect.RequestAspect.doAfterReturning(RequestAspect.java:80)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$9b5d4853.getByPage(<generated>)
Caused by: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'log_params' at row 1
(String), POST(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:33:22","logId":220,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:39:32","logId":221,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java基础知识\"}],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logMethod":"POST","logStatus":""},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:47:31.434 DEBUG [main]com.jg.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2021-03-23 13:47:59.025 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select name, header, signature, username, password from bl_admin where username = ? 
2021-03-23 13:47:59.055 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: admin(String)
2021-03-23 13:47:59.080 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2021-03-23 13:47:59.089 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:47:59.092 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)](String), 1(Integer), null, POST(String), 99(Long), {"code":20000,"data":{"token":"CAB4384B63861B97D5A79EA8C47C9619"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:47:59.164 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:47:59.550 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:47:59.551 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/info(String), [](String), 1(Integer), null, GET(String), 2(Long), {"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:47:59.580 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:47:59.806 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2021-03-23 13:47:59.807 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2021-03-23 13:47:59.810 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 1
2021-03-23 13:47:59.819 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:47:59.821 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), null, GET(String), 15(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:47:59.830 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:48:00.123 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2021-03-23 13:48:00.124 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 13:48:00.132 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:48:00.136 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2021-03-23 13:48:00.137 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 13:48:00.139 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:48:00.151 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:48:00.152 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 51(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":292,"totalPage":30},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:48:00.162 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:48:03.244 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_method = ? limit ?, ? 
2021-03-23 13:48:03.246 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: GET(String), 0(Integer), 10(Integer)
2021-03-23 13:48:03.251 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:48:03.255 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_method = ? 
2021-03-23 13:48:03.256 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: GET(String)
2021-03-23 13:48:03.257 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:48:03.263 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:48:03.264 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), 数据过大(String), 1(Integer), null, POST(String), 25(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:31:21","logId":11,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"id\":1,\"name\":\"he\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":10,"logUrl":"/admin/getAdmin"},{"createdTime":"2020-12-24 11:33:21","logId":12,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:40:29","logId":15,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":3,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 13:52:51","logId":19,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":3,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:01:47","logId":20,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:06:39","logId":22,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:06:52","logId":24,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":3,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:08:03","logId":26,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logMethod":"GET"},"sortMethod":"asc","totalCount":163,"totalPage":17},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:48:03.286 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:48:05.205 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2021-03-23 13:48:05.206 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 13:48:05.211 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:48:05.216 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2021-03-23 13:48:05.216 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 13:48:05.217 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:48:05.222 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:48:05.224 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), 数据过大(String), 1(Integer), null, POST(String), 18(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logMethod":""},"sortMethod":"asc","totalCount":294,"totalPage":30},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:48:05.235 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:48:11.236 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 13:48:11.237 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2021-03-23 13:48:11.241 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:48:11.246 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 13:48:11.247 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 1(Integer)
2021-03-23 13:48:11.248 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:48:11.253 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:48:11.254 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), 数据过大(String), 1(Integer), null, POST(String), 18(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logMethod":"","logStatus":1},"sortMethod":"asc","totalCount":283,"totalPage":29},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:48:11.268 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:48:13.084 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? and log_method = ? limit ?, ? 
2021-03-23 13:48:13.085 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 1(Integer), GET(String), 0(Integer), 10(Integer)
2021-03-23 13:48:13.088 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:48:13.092 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? and log_method = ? 
2021-03-23 13:48:13.093 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 1(Integer), GET(String)
2021-03-23 13:48:13.094 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:48:13.100 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:48:13.101 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), 数据过大(String), 1(Integer), null, POST(String), 16(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:31:21","logId":11,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"id\":1,\"name\":\"he\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":10,"logUrl":"/admin/getAdmin"},{"createdTime":"2020-12-24 11:33:21","logId":12,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:40:29","logId":15,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":3,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 13:52:51","logId":19,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":3,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:01:47","logId":20,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:06:39","logId":22,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:06:52","logId":24,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":3,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:08:03","logId":26,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logMethod":"GET","logStatus":1},"sortMethod":"asc","totalCount":159,"totalPage":16},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:48:13.107 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:48:14.736 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 13:48:14.737 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 1(Integer), 0(Integer), 10(Integer)
2021-03-23 13:48:14.740 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:48:14.745 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 13:48:14.745 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 1(Integer)
2021-03-23 13:48:14.747 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:48:14.756 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:48:14.757 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), 数据过大(String), 1(Integer), null, POST(String), 20(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logMethod":"","logStatus":1},"sortMethod":"asc","totalCount":285,"totalPage":29},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:48:14.788 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:48:23.162 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log WHERE log_status = ? limit ?, ? 
2021-03-23 13:48:23.163 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: (String), 0(Integer), 10(Integer)
2021-03-23 13:48:23.167 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 13:48:23.171 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log WHERE log_status = ? 
2021-03-23 13:48:23.171 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: (String)
2021-03-23 13:48:23.174 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 13:48:23.180 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:48:23.182 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), 数据过大(String), 1(Integer), null, POST(String), 18(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logMethod":"","logStatus":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:48:23.210 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:49:25.667 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getAll.debug:159 -==>  Preparing: select log_id, log_url, log_status, log_message, log_method, log_time, log_ip, created_time from bl_log 
2021-03-23 13:49:25.669 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 13:49:26.274 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.getAll.debug:159 -<==      Total: 299
2021-03-23 13:49:45.074 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:49:45.076 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/export(String), [com.alibaba.druid.support.http.WebStatFilter$StatHttpServletResponseWrapper@1bce4d4a](String), 0(Integer), org.apache.poi.openxml4j.exceptions.OpenXML4JRuntimeException: Fail to save: an error occurs while saving the package : The part /docProps/core.xml failed to be saved in the stream with marshaller org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller@466ba653
	at com.jg.blog.controller.LogController.export(LogController.java:88)
	at com.jg.blog.controller.LogController$$FastClassBySpringCGLIB$$8b5021b6.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$317b000d.export(<generated>)
Caused by: org.apache.poi.openxml4j.exceptions.OpenXML4JException: The part /docProps/core.xml failed to be saved in the stream with marshaller org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller@466ba653
(String), POST(String), 0(Long), {"code":20000,"data":{"token":"CAB4384B63861B97D5A79EA8C47C9619"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 13:49:45.085 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 13:49:54.479 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getAll.debug:159 -==>  Preparing: select log_id, log_url, log_status, log_message, log_method, log_time, log_ip, created_time from bl_log 
2021-03-23 13:49:54.479 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 13:49:54.516 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.getAll.debug:159 -<==      Total: 300
2021-03-23 13:49:54.724 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 13:49:54.725 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/export(String), [com.alibaba.druid.support.http.WebStatFilter$StatHttpServletResponseWrapper@7187f12a](String), 1(Integer), null, POST(String), 248(Long), null(String), 127.0.0.1(String)
2021-03-23 13:49:54.734 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:11:31.487 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==>  Preparing: select log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time from bl_log limit ?, ? 
2021-03-23 14:11:31.488 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 14:11:31.490 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getByPage.debug:159 -<==      Total: 10
2021-03-23 14:11:31.494 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_log 
2021-03-23 14:11:31.494 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 14:11:31.494 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 14:11:31.500 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:11:31.500 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /log/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":301,"totalPage":31},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:11:31.516 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:12:04.380 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2021-03-23 14:12:04.381 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2021-03-23 14:12:04.382 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2021-03-23 14:12:04.388 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:12:04.389 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:12:04.399 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:17:52.922 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2021-03-23 14:17:52.922 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2021-03-23 14:17:52.927 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2021-03-23 14:17:52.928 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2021-03-23 14:17:52.929 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2021-03-23 14:17:52.929 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 14:17:52.931 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2021-03-23 14:17:52.937 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:17:52.937 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 1
2021-03-23 14:17:52.938 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 21(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:17:52.944 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:17:52.945 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:17:52.946 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 38(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:17:52.952 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:17:53.013 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:17:53.014 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logMethod":""},"sortMethod":"asc","totalCount":294,"totalPage":30},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:17:53.019 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:17:53.165 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2021-03-23 14:17:53.166 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 14:17:53.169 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 14:17:53.170 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 14:17:53.170 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 14:17:53.172 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 14:17:53.178 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:17:53.179 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 78(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-01-07 14:39:32"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:17:53.189 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:18:09.277 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2021-03-23 14:18:09.277 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2021-03-23 14:18:09.277 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 14:18:09.278 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2021-03-23 14:18:09.280 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 14:18:09.281 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 14:18:09.281 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 14:18:09.282 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2021-03-23 14:18:09.283 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 14:18:09.286 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:18:09.287 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), org.apache.poi.openxml4j.exceptions.OpenXML4JRuntimeException: Fail to save: an error occurs while saving the package : The part /docProps/core.xml failed to be saved in the stream with marshaller org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller@466ba653
	at com.jg.blog.controller.LogController.export(LogController.java:88)
	at com.jg.blog.controller.LogController$$FastClassBySpringCGLIB$$8b5021b6.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$317b000d.export(<generated>)
Caused by: org.apache.poi.openxml4j.exceptions.OpenXML4JException: The part /docProps/core.xml failed to be saved in the stream with marshaller org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller@466ba653
(String), GET(String), 12(Long), {"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:18:09.289 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:18:09.290 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 14(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-01-07 14:39:32"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:18:09.322 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2021-03-23 14:18:09.323 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2021-03-23 14:18:09.324 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 1
2021-03-23 14:18:09.328 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:18:09.328 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 7(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:18:09.418 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:18:09.420 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:18:09.420 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:18:09.592 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2021-03-23 14:18:09.593 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 14:18:09.595 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2021-03-23 14:18:09.595 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2021-03-23 14:18:09.596 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2021-03-23 14:18:09.602 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:18:09.603 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:18:09.605 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:18:09.606 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":301,"totalPage":31},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:18:09.613 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:18:09.616 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:22:55.255 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2021-03-23 14:22:55.256 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 14:22:55.258 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 14:22:55.259 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 14:22:55.260 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 14:22:55.261 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 14:22:55.271 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:22:55.272 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 20(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-01-07 14:39:32"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:22:55.277 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2021-03-23 14:22:55.278 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2021-03-23 14:22:55.279 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2021-03-23 14:22:55.288 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:22:55.288 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:22:55.289 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 10(Long), {"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:22:55.294 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:22:55.521 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2021-03-23 14:22:55.522 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2021-03-23 14:22:55.523 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 1
2021-03-23 14:22:55.531 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:22:55.532 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 13(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:22:55.542 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:22:55.592 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2021-03-23 14:22:55.592 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 14:22:55.594 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2021-03-23 14:22:55.595 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2021-03-23 14:22:55.595 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2021-03-23 14:22:55.603 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:22:55.604 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 14(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:22:55.609 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:22:55.610 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logMethod":""},"sortMethod":"asc","totalCount":294,"totalPage":30},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:22:55.614 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:22:55.617 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:18.327 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2021-03-23 14:23:18.328 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 14:23:18.329 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2021-03-23 14:23:18.329 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:18.330 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2021-03-23 14:23:18.330 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 14:23:18.331 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 14:23:18.332 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2021-03-23 14:23:18.333 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:18.341 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:18.341 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 15(Long), {"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:18.343 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:18.344 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), org.apache.poi.openxml4j.exceptions.OpenXML4JRuntimeException: Fail to save: an error occurs while saving the package : The part /docProps/core.xml failed to be saved in the stream with marshaller org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller@466ba653
	at com.jg.blog.controller.LogController.export(LogController.java:88)
	at com.jg.blog.controller.LogController$$FastClassBySpringCGLIB$$8b5021b6.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$317b000d.export(<generated>)
Caused by: org.apache.poi.openxml4j.exceptions.OpenXML4JException: The part /docProps/core.xml failed to be saved in the stream with marshaller org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller@466ba653
(String), POST(String), 17(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-01-07 14:39:32"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:18.360 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:18.362 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:18.647 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2021-03-23 14:23:18.648 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2021-03-23 14:23:18.649 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2021-03-23 14:23:18.649 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 1
2021-03-23 14:23:18.649 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2021-03-23 14:23:18.659 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:18.660 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:18.661 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:18.662 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:18.663 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2021-03-23 14:23:18.664 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 14:23:18.665 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2021-03-23 14:23:18.669 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:18.671 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:18.672 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 23(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:18.673 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:18.676 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:26.206 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==>  Preparing: select blog_id, blog_title, blog_content, blog_goods, blog_image, blog_read, blog_collection, blog_type, blog_remark, blog_comment, blog_source, created_time, version from bl_blog where blog_id = ? and deleted = 0 
2021-03-23 14:23:26.206 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getById.debug:159 -==> Parameters: 1347070275481460736(String)
2021-03-23 14:23:26.209 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:26.210 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getGood/1347070275481460736(String), [1347070275481460736](String), 0(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getGoodsCount(BlogServiceImpl.java:144)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$318a9417.getGoodsCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b37429f9.getGoodsCount(<generated>)
	at com.jg.blog.controller.BlogController.getGood(BlogController.java:181)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bb7e49e3.getGood(<generated>)
(String), GET(String), 0(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:26.215 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getById.debug:159 -<==      Total: 1
2021-03-23 14:23:26.220 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.update.debug:159 -==>  Preparing: update bl_blog set version = version + 1 ,blog_title = ? ,blog_content = ? ,blog_goods = ? ,blog_read = ? ,blog_collection = ? ,blog_type = ? ,blog_remark = ? ,blog_comment = ? where blog_id = ? and version = ? 
2021-03-23 14:23:26.221 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.update.debug:159 -==> Parameters: 12(String), <p>哇</p>(String), 0(Integer), 1(Integer), 0(Integer), 6(Integer), ww(String), 0(Integer), 1347070275481460736(String), 1(Integer)
2021-03-23 14:23:26.240 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:26.242 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getCollection/1347070275481460736(String), [1347070275481460736](String), 0(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionCount(BlogServiceImpl.java:171)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$318a9417.getCollectionCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b37429f9.getCollectionCount(<generated>)
	at com.jg.blog.controller.BlogController.getCollection(BlogController.java:206)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bb7e49e3.getCollection(<generated>)
(String), GET(String), 0(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:26.259 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:26.261 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:26.264 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.update.debug:159 -<==    Updates: 1
2021-03-23 14:23:26.296 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.TypeMapper.getById.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable from bl_type where type_id = ? and deleted = 0 
2021-03-23 14:23:26.297 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.TypeMapper.getById.debug:159 -==> Parameters: 6(Integer)
2021-03-23 14:23:26.299 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.TypeMapper.getById.debug:159 -<==      Total: 1
2021-03-23 14:23:26.314 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:26.315 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/read/1347070275481460736(String), [1347070275481460736](String), 1(Integer), null, GET(String), 111(Long), {"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>哇</p>","blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:26.319 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:26.629 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:26.630 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /comment/getByBlog/1347070275481460736(String), [1347070275481460736](String), 0(Integer), org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.CommentServiceImpl.getByBlog(CommentServiceImpl.java:67)
	at com.jg.blog.controller.CommentController.getByBlog(CommentController.java:53)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$10fa9ffe.getByBlog(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
(String), GET(String), 0(Long), {"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:26.639 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:39.902 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2021-03-23 14:23:39.902 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2021-03-23 14:23:39.903 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 1
2021-03-23 14:23:39.909 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:39.910 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 11(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:39.928 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:41.033 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2021-03-23 14:23:41.034 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 14:23:41.036 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:41.037 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 14:23:41.037 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 14:23:41.038 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:41.044 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:41.046 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:41.059 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:42.872 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2021-03-23 14:23:42.872 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2021-03-23 14:23:42.873 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 1
2021-03-23 14:23:42.880 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:42.881 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.apache.poi.openxml4j.exceptions.OpenXML4JRuntimeException: Fail to save: an error occurs while saving the package : The part /docProps/core.xml failed to be saved in the stream with marshaller org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller@466ba653
	at com.jg.blog.controller.LogController.export(LogController.java:88)
	at com.jg.blog.controller.LogController$$FastClassBySpringCGLIB$$8b5021b6.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$317b000d.export(<generated>)
Caused by: org.apache.poi.openxml4j.exceptions.OpenXML4JException: The part /docProps/core.xml failed to be saved in the stream with marshaller org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller@466ba653
(String), GET(String), 9(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:42.890 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:43.815 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getTimeLine.debug:159 -==>  Preparing: select blog_id, blog_title, created_time, date_format(created_time, '%Y-%m') as blog_month from bl_blog order by created_time desc 
2021-03-23 14:23:43.815 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getTimeLine.debug:159 -==> Parameters: 
2021-03-23 14:23:43.823 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getTimeLine.debug:159 -<==      Total: 1
2021-03-23 14:23:43.831 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:43.832 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getTimeLine(String), [](String), 1(Integer), null, GET(String), 17(Long), {"code":20000,"data":[{"list":[{"blogId":"1347070275481460736","blogMonth":"2021-01","blogTitle":"12","createdTime":"2021-01-07 14:39:32"}],"month":"2021-01"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:43.839 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:44.959 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2021-03-23 14:23:44.961 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2021-03-23 14:23:44.962 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 1
2021-03-23 14:23:44.968 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:44.969 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 10(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:44.980 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:45.384 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.AboutMapper.getAbout.debug:159 -==>  Preparing: select about_id, about_title, about_content, about_read, created_time, update_time, version from bl_about where enable = 1 and deleted = 0 limit 1 
2021-03-23 14:23:45.385 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.AboutMapper.getAbout.debug:159 -==> Parameters: 
2021-03-23 14:23:45.395 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:45.396 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /about/read(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'where clause'
	at com.jg.blog.service.impl.AboutServiceImpl.read(AboutServiceImpl.java:46)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$21a5d844.read(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$90447050.read(<generated>)
	at com.jg.blog.controller.AboutController.read(AboutController.java:69)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$42e62848.read(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'where clause'
(String), GET(String), 0(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:45.406 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:46.106 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.BlogMapper.getTimeLine.debug:159 -==>  Preparing: select blog_id, blog_title, created_time, date_format(created_time, '%Y-%m') as blog_month from bl_blog order by created_time desc 
2021-03-23 14:23:46.108 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.BlogMapper.getTimeLine.debug:159 -==> Parameters: 
2021-03-23 14:23:46.110 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.BlogMapper.getTimeLine.debug:159 -<==      Total: 1
2021-03-23 14:23:46.117 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:46.118 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getTimeLine(String), [](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getGoodsCount(BlogServiceImpl.java:144)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$318a9417.getGoodsCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b37429f9.getGoodsCount(<generated>)
	at com.jg.blog.controller.BlogController.getGood(BlogController.java:181)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bb7e49e3.getGood(<generated>)
(String), GET(String), 11(Long), {"code":20000,"data":[{"list":[{"blogId":"1347070275481460736","blogMonth":"2021-01","blogTitle":"12","createdTime":"2021-01-07 14:39:32"}],"month":"2021-01"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:46.129 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:46.355 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count from bl_type where deleted = 0 and enable = 1 
2021-03-23 14:23:46.356 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2021-03-23 14:23:46.358 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 1
2021-03-23 14:23:46.365 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:46.366 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /type/getList(String), [](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionCount(BlogServiceImpl.java:171)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$318a9417.getCollectionCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b37429f9.getCollectionCount(<generated>)
	at com.jg.blog.controller.BlogController.getCollection(BlogController.java:206)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bb7e49e3.getCollection(<generated>)
(String), GET(String), 9(Long), {"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:46.376 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:46.711 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2021-03-23 14:23:46.712 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 14:23:46.714 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:46.715 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 14:23:46.715 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 14:23:46.717 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:46.723 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:46.724 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 16(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:46.737 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:49.452 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_goods desc limit ?, ? 
2021-03-23 14:23:49.453 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 14:23:49.455 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:49.457 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 14:23:49.459 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 14:23:49.460 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:49.467 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:49.468 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1347070275481460736, blogTitle=12, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java基础知识, blogSource=null, blogRemark=ww, blogComment=0, blogMonth=null, createdTime=2021-01-07 14:39:32, updateTime=2021-03-23 14:23:26)], params={}, sortColumn=blog_goods, sortMethod=desc)](String), 1(Integer), org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.CommentServiceImpl.getByBlog(CommentServiceImpl.java:67)
	at com.jg.blog.controller.CommentController.getByBlog(CommentController.java:53)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$10fa9ffe.getByBlog(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
(String), POST(String), 19(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:49.478 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:50.243 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_comment desc limit ?, ? 
2021-03-23 14:23:50.243 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 14:23:50.246 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:50.246 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 14:23:50.247 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 14:23:50.248 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:50.254 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:50.255 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1347070275481460736, blogTitle=12, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java基础知识, blogSource=null, blogRemark=ww, blogComment=0, blogMonth=null, createdTime=2021-01-07 14:39:32, updateTime=2021-03-23 14:23:26)], params={}, sortColumn=blog_comment, sortMethod=desc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:50.266 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:51.360 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_read desc limit ?, ? 
2021-03-23 14:23:51.361 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 14:23:51.364 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:51.364 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 14:23:51.365 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 14:23:51.366 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:51.372 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:51.374 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1347070275481460736, blogTitle=12, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java基础知识, blogSource=null, blogRemark=ww, blogComment=0, blogMonth=null, createdTime=2021-01-07 14:39:32, updateTime=2021-03-23 14:23:26)], params={}, sortColumn=blog_read, sortMethod=desc)](String), 1(Integer), null, POST(String), 17(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:51.384 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:52.545 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2021-03-23 14:23:52.545 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 14:23:52.547 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:52.547 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 14:23:52.548 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 14:23:52.549 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:52.558 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:52.559 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1347070275481460736, blogTitle=12, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java基础知识, blogSource=null, blogRemark=ww, blogComment=0, blogMonth=null, createdTime=2021-01-07 14:39:32, updateTime=2021-03-23 14:23:26)], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), org.apache.poi.openxml4j.exceptions.OpenXML4JRuntimeException: Fail to save: an error occurs while saving the package : The part /docProps/core.xml failed to be saved in the stream with marshaller org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller@466ba653
	at com.jg.blog.controller.LogController.export(LogController.java:88)
	at com.jg.blog.controller.LogController$$FastClassBySpringCGLIB$$8b5021b6.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$317b000d.export(<generated>)
Caused by: org.apache.poi.openxml4j.exceptions.OpenXML4JException: The part /docProps/core.xml failed to be saved in the stream with marshaller org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller@466ba653
(String), POST(String), 13(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:52.570 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:52.869 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_goods desc limit ?, ? 
2021-03-23 14:23:52.870 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 14:23:52.874 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:52.875 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 14:23:52.876 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 14:23:52.878 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:52.884 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:52.885 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1347070275481460736, blogTitle=12, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java基础知识, blogSource=null, blogRemark=ww, blogComment=0, blogMonth=null, createdTime=2021-01-07 14:39:32, updateTime=2021-03-23 14:23:26)], params={}, sortColumn=blog_goods, sortMethod=desc)](String), 1(Integer), null, POST(String), 19(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:52.896 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:53.605 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_comment desc limit ?, ? 
2021-03-23 14:23:53.605 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 14:23:53.607 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:53.608 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 14:23:53.608 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 14:23:53.609 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:53.617 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:53.618 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1347070275481460736, blogTitle=12, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java基础知识, blogSource=null, blogRemark=ww, blogComment=0, blogMonth=null, createdTime=2021-01-07 14:39:32, updateTime=2021-03-23 14:23:26)], params={}, sortColumn=blog_comment, sortMethod=desc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:53.631 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:53.855 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_collection desc limit ?, ? 
2021-03-23 14:23:53.856 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 14:23:53.858 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:53.858 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 14:23:53.859 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 14:23:53.860 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:53.867 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:53.868 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1347070275481460736, blogTitle=12, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java基础知识, blogSource=null, blogRemark=ww, blogComment=0, blogMonth=null, createdTime=2021-01-07 14:39:32, updateTime=2021-03-23 14:23:26)], params={}, sortColumn=blog_collection, sortMethod=desc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'where clause'
	at com.jg.blog.service.impl.AboutServiceImpl.read(AboutServiceImpl.java:46)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$21a5d844.read(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$FastClassBySpringCGLIB$$fbc11ab5.invoke(<generated>)
	at com.jg.blog.service.impl.AboutServiceImpl$$EnhancerBySpringCGLIB$$90447050.read(<generated>)
	at com.jg.blog.controller.AboutController.read(AboutController.java:69)
	at com.jg.blog.controller.AboutController$$FastClassBySpringCGLIB$$618853f.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AboutController$$EnhancerBySpringCGLIB$$42e62848.read(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enable' in 'where clause'
(String), POST(String), 14(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:53.880 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:54.225 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_read desc limit ?, ? 
2021-03-23 14:23:54.226 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 14:23:54.227 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:54.228 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 14:23:54.229 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 14:23:54.229 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:54.239 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:54.240 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1347070275481460736, blogTitle=12, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java基础知识, blogSource=null, blogRemark=ww, blogComment=0, blogMonth=null, createdTime=2021-01-07 14:39:32, updateTime=2021-03-23 14:23:26)], params={}, sortColumn=blog_read, sortMethod=desc)](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getGoodsCount(BlogServiceImpl.java:144)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$318a9417.getGoodsCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b37429f9.getGoodsCount(<generated>)
	at com.jg.blog.controller.BlogController.getGood(BlogController.java:181)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bb7e49e3.getGood(<generated>)
(String), POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:54.251 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:54.985 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_comment desc limit ?, ? 
2021-03-23 14:23:54.985 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 14:23:54.987 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:54.987 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 14:23:54.988 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 14:23:54.989 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:54.994 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:54.995 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1347070275481460736, blogTitle=12, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java基础知识, blogSource=null, blogRemark=ww, blogComment=0, blogMonth=null, createdTime=2021-01-07 14:39:32, updateTime=2021-03-23 14:23:26)], params={}, sortColumn=blog_comment, sortMethod=desc)](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionCount(BlogServiceImpl.java:171)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$318a9417.getCollectionCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b37429f9.getCollectionCount(<generated>)
	at com.jg.blog.controller.BlogController.getCollection(BlogController.java:206)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bb7e49e3.getCollection(<generated>)
(String), POST(String), 12(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:55.006 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:23:55.237 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by blog_goods desc limit ?, ? 
2021-03-23 14:23:55.238 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 14:23:55.239 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:55.239 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 14:23:55.240 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 14:23:55.241 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 14:23:55.245 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:23:55.246 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1347070275481460736, blogTitle=12, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java基础知识, blogSource=null, blogRemark=ww, blogComment=0, blogMonth=null, createdTime=2021-01-07 14:39:32, updateTime=2021-03-23 14:23:26)], params={}, sortColumn=blog_goods, sortMethod=desc)](String), 1(Integer), null, POST(String), 12(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:23:55.255 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:24:58.970 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:24:58.970 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=null, password=null, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.CommentServiceImpl.getByBlog(CommentServiceImpl.java:67)
	at com.jg.blog.controller.CommentController.getByBlog(CommentController.java:53)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$10fa9ffe.getByBlog(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
(String), POST(String), 6(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2021-03-23 14:24:58.981 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:24:59.191 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:24:59.192 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=null, password=null, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), POST(String), 2(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2021-03-23 14:24:59.197 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:25:04.273 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.UserMapper.getByUsername.debug:159 -==>  Preparing: select user_id, username, password, sex, header, nickname, user_email, deleted from bl_user where username = ? 
2021-03-23 14:25:04.274 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.UserMapper.getByUsername.debug:159 -==> Parameters: he(String)
2021-03-23 14:25:04.276 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.UserMapper.getByUsername.debug:159 -<==      Total: 1
2021-03-23 14:25:04.287 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:25:04.288 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /user/login(String), [User(userId=null, username=he, password=123456, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)](String), 1(Integer), null, POST(String), 10(Long), {"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","sex":1,"userId":1,"username":"he"},"token":"CAB4384B63861B97D5A79EA8C47C9619"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:25:04.293 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:25:04.665 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2021-03-23 14:25:04.666 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 14:25:04.667 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 14:25:04.668 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 14:25:04.668 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 14:25:04.669 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 14:25:04.677 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:25:04.678 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), org.apache.poi.openxml4j.exceptions.OpenXML4JRuntimeException: Fail to save: an error occurs while saving the package : The part /docProps/core.xml failed to be saved in the stream with marshaller org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller@466ba653
	at com.jg.blog.controller.LogController.export(LogController.java:88)
	at com.jg.blog.controller.LogController$$FastClassBySpringCGLIB$$8b5021b6.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$317b000d.export(<generated>)
Caused by: org.apache.poi.openxml4j.exceptions.OpenXML4JException: The part /docProps/core.xml failed to be saved in the stream with marshaller org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller@466ba653
(String), POST(String), 13(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:25:04.687 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:25:04.691 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2021-03-23 14:25:04.692 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2021-03-23 14:25:04.694 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2021-03-23 14:25:04.698 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:25:04.699 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 9(Long), {"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:25:04.703 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:25:04.733 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2021-03-23 14:25:04.734 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2021-03-23 14:25:04.735 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 1
2021-03-23 14:25:04.742 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:25:04.743 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 8(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:25:04.753 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:25:04.792 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2021-03-23 14:25:04.793 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2021-03-23 14:25:04.797 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2021-03-23 14:25:04.798 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 14:25:04.799 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2021-03-23 14:25:04.800 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:25:04.801 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:25:04.804 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:25:04.805 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getGoodsCount(BlogServiceImpl.java:144)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$318a9417.getGoodsCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b37429f9.getGoodsCount(<generated>)
	at com.jg.blog.controller.BlogController.getGood(BlogController.java:181)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bb7e49e3.getGood(<generated>)
(String), GET(String), 6(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:25:04.812 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:25:04.819 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:25:48.214 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2021-03-23 14:25:48.215 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 14:25:48.216 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 14:25:48.217 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 14:25:48.218 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 14:25:48.219 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 14:25:48.220 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2021-03-23 14:25:48.220 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2021-03-23 14:25:48.222 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2021-03-23 14:25:48.228 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:25:48.229 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionCount(BlogServiceImpl.java:171)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$318a9417.getCollectionCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b37429f9.getCollectionCount(<generated>)
	at com.jg.blog.controller.BlogController.getCollection(BlogController.java:206)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bb7e49e3.getCollection(<generated>)
(String), POST(String), 17(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:25:48.231 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:25:48.232 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:25:48.330 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:25:48.342 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:25:48.472 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2021-03-23 14:25:48.473 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2021-03-23 14:25:48.474 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 1
2021-03-23 14:25:48.480 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:25:48.482 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.CommentServiceImpl.getByBlog(CommentServiceImpl.java:67)
	at com.jg.blog.controller.CommentController.getByBlog(CommentController.java:53)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$10fa9ffe.getByBlog(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
(String), GET(String), 9(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:25:48.492 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:25:48.577 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2021-03-23 14:25:48.578 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2021-03-23 14:25:48.581 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2021-03-23 14:25:48.582 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 14:25:48.583 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2021-03-23 14:25:48.589 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:25:48.589 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2021-03-23 14:25:48.590 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:25:48.591 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 13(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:25:48.599 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:25:48.602 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:26:26.915 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2021-03-23 14:26:26.915 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 14:26:26.917 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 14:26:26.918 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 14:26:26.918 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 14:26:26.918 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2021-03-23 14:26:26.919 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2021-03-23 14:26:26.919 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 14:26:26.920 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==>  Preparing: select id, name, header, signature, comment, username from bl_admin limit 1 
2021-03-23 14:26:26.920 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 1
2021-03-23 14:26:26.920 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -==> Parameters: 
2021-03-23 14:26:26.921 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.AdminMapper.getAdmin.debug:159 -<==      Total: 1
2021-03-23 14:26:26.927 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:26:26.928 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 9(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:26:26.929 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:26:26.929 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /admin/getAdmin(String), [](String), 1(Integer), null, GET(String), 12(Long), {"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:26:26.930 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:26:26.931 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), org.apache.poi.openxml4j.exceptions.OpenXML4JRuntimeException: Fail to save: an error occurs while saving the package : The part /docProps/core.xml failed to be saved in the stream with marshaller org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller@466ba653
	at com.jg.blog.controller.LogController.export(LogController.java:88)
	at com.jg.blog.controller.LogController$$FastClassBySpringCGLIB$$8b5021b6.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$317b000d.export(<generated>)
Caused by: org.apache.poi.openxml4j.exceptions.OpenXML4JException: The part /docProps/core.xml failed to be saved in the stream with marshaller org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller@466ba653
(String), POST(String), 14(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:26:26.937 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:26:26.940 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:26:26.940 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:26:27.141 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2021-03-23 14:26:27.141 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2021-03-23 14:26:27.147 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:26:27.147 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:26:27.157 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 14:26:27.219 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2021-03-23 14:26:27.219 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 14:26:27.220 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2021-03-23 14:26:27.224 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 14:26:27.224 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getGoodsCount(BlogServiceImpl.java:144)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$318a9417.getGoodsCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b37429f9.getGoodsCount(<generated>)
	at com.jg.blog.controller.BlogController.getGood(BlogController.java:181)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bb7e49e3.getGood(<generated>)
(String), GET(String), 6(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 14:26:27.234 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:06:30.320 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2021-03-23 15:06:30.321 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 15:06:30.324 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 15:06:30.325 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 15:06:30.325 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 15:06:30.326 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 15:06:30.333 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:06:30.334 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionCount(BlogServiceImpl.java:171)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$318a9417.getCollectionCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b37429f9.getCollectionCount(<generated>)
	at com.jg.blog.controller.BlogController.getCollection(BlogController.java:206)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bb7e49e3.getCollection(<generated>)
(String), POST(String), 46(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:06:30.344 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:06:30.633 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2021-03-23 15:06:30.634 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2021-03-23 15:06:30.635 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 1
2021-03-23 15:06:30.649 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2021-03-23 15:06:30.649 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2021-03-23 15:06:30.652 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:06:30.652 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.CommentServiceImpl.getByBlog(CommentServiceImpl.java:67)
	at com.jg.blog.controller.CommentController.getByBlog(CommentController.java:53)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$10fa9ffe.getByBlog(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
(String), GET(String), 12(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:06:30.654 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2021-03-23 15:06:30.655 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 15:06:30.657 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2021-03-23 15:06:30.661 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:06:30.662 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2021-03-23 15:06:30.666 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:06:30.667 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:06:30.667 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 24(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:06:30.679 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:06:30.683 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:06:35.733 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2021-03-23 15:06:35.733 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 15:06:35.735 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2021-03-23 15:06:35.735 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 15:06:35.736 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2021-03-23 15:06:35.736 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 15:06:35.737 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 15:06:35.738 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 1
2021-03-23 15:06:35.738 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 15:06:35.746 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:06:35.747 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), org.apache.poi.openxml4j.exceptions.OpenXML4JRuntimeException: Fail to save: an error occurs while saving the package : The part /docProps/core.xml failed to be saved in the stream with marshaller org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller@466ba653
	at com.jg.blog.controller.LogController.export(LogController.java:88)
	at com.jg.blog.controller.LogController$$FastClassBySpringCGLIB$$8b5021b6.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.LogController$$EnhancerBySpringCGLIB$$317b000d.export(<generated>)
Caused by: org.apache.poi.openxml4j.exceptions.OpenXML4JException: The part /docProps/core.xml failed to be saved in the stream with marshaller org.apache.poi.openxml4j.opc.internal.marshallers.ZipPackagePropertiesMarshaller@466ba653
(String), GET(String), 16(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:06:35.748 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:06:35.748 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), POST(String), 18(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:06:35.781 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:06:35.786 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:06:36.040 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2021-03-23 15:06:36.041 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2021-03-23 15:06:36.042 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2021-03-23 15:06:36.043 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 15:06:36.044 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2021-03-23 15:06:36.053 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:06:36.054 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:06:36.056 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:06:36.056 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getGoodsCount(BlogServiceImpl.java:144)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$318a9417.getGoodsCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b37429f9.getGoodsCount(<generated>)
	at com.jg.blog.controller.BlogController.getGood(BlogController.java:181)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bb7e49e3.getGood(<generated>)
(String), GET(String), 13(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:06:36.348 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:06:36.351 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:06:45.070 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2021-03-23 15:06:45.071 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 15:06:45.072 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 15:06:45.073 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 15:06:45.074 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 15:06:45.075 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 15:06:45.076 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2021-03-23 15:06:45.077 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2021-03-23 15:06:45.080 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 1
2021-03-23 15:06:45.086 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:06:45.087 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 16(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:06:45.089 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:06:45.089 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionCount(BlogServiceImpl.java:171)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$318a9417.getCollectionCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b37429f9.getCollectionCount(<generated>)
	at com.jg.blog.controller.BlogController.getCollection(BlogController.java:206)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bb7e49e3.getCollection(<generated>)
(String), GET(String), 14(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:06:45.099 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:06:45.105 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:06:45.372 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2021-03-23 15:06:45.372 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2021-03-23 15:06:45.377 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2021-03-23 15:06:45.378 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 15:06:45.380 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2021-03-23 15:06:45.383 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:06:45.383 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), {"code":40002,"msg":"用户名或密码错误！"}(String), 127.0.0.1(String)
2021-03-23 15:06:45.387 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:06:45.388 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 11(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:06:45.393 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:06:45.396 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:08:17.908 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2021-03-23 15:08:17.909 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 15:08:17.911 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 15:08:17.911 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 15:08:17.912 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 15:08:17.914 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 15:08:17.921 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:08:17.922 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 16(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:08:17.932 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:08:18.215 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2021-03-23 15:08:18.216 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2021-03-23 15:08:18.217 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 1
2021-03-23 15:08:18.226 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:08:18.227 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 11(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:08:18.234 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:08:18.243 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2021-03-23 15:08:18.244 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 15:08:18.246 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2021-03-23 15:08:18.273 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:08:18.274 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 10(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:08:18.276 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2021-03-23 15:08:18.276 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2021-03-23 15:08:18.280 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:08:18.306 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:08:18.307 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:08:18.311 DEBUG [http-nio-1000-exec-6]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:08:35.838 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2021-03-23 15:08:35.838 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 15:08:35.840 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 15:08:35.840 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 15:08:35.841 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 15:08:35.842 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 15:08:35.845 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2021-03-23 15:08:35.845 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2021-03-23 15:08:35.846 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 1
2021-03-23 15:08:35.848 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:08:35.849 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.CommentServiceImpl.getByBlog(CommentServiceImpl.java:67)
	at com.jg.blog.controller.CommentController.getByBlog(CommentController.java:53)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$10fa9ffe.getByBlog(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
(String), POST(String), 14(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:08:35.854 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:08:35.855 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionCount(BlogServiceImpl.java:171)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$318a9417.getCollectionCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b37429f9.getCollectionCount(<generated>)
	at com.jg.blog.controller.BlogController.getCollection(BlogController.java:206)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bb7e49e3.getCollection(<generated>)
(String), GET(String), 10(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:08:35.860 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2021-03-23 15:08:35.861 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:08:35.861 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 15:08:35.862 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2021-03-23 15:08:35.864 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:08:35.866 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2021-03-23 15:08:35.866 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2021-03-23 15:08:35.869 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:08:35.870 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), null, GET(String), 23(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:08:35.874 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:08:35.876 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:08:35.876 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:08:35.882 DEBUG [http-nio-1000-exec-9]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:12:58.875 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2021-03-23 15:12:58.875 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 15:12:58.879 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 15:12:58.879 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 15:12:58.880 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 15:12:58.881 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 15:12:58.888 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:12:58.889 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), null, POST(String), 15(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:12:58.892 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:12:59.202 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2021-03-23 15:12:59.203 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2021-03-23 15:12:59.204 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 1
2021-03-23 15:12:59.204 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2021-03-23 15:12:59.205 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 15:12:59.205 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2021-03-23 15:12:59.207 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2021-03-23 15:12:59.208 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2021-03-23 15:12:59.212 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:12:59.213 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 15(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:12:59.216 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:12:59.216 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 15(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:12:59.218 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:12:59.219 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:12:59.225 DEBUG [http-nio-1000-exec-5]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:12:59.228 DEBUG [http-nio-1000-exec-1]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:12:59.228 DEBUG [http-nio-1000-exec-4]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:13:03.057 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by created_time desc limit ?, ? 
2021-03-23 15:13:03.057 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 15:13:03.059 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==>  Preparing: select link_id, link_name, link_url, created_time, update_time from bl_link where deleted = 0 
2021-03-23 15:13:03.059 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 15:13:03.059 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -==> Parameters: 
2021-03-23 15:13:03.060 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 15:13:03.060 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LinkMapper.getAll.debug:159 -<==      Total: 0
2021-03-23 15:13:03.061 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 15:13:03.061 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==>  Preparing: select id, name, artist, url, cover, lrc from bl_music where deleted = 0 and enabled = 1 
2021-03-23 15:13:03.061 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.MusicMapper.getList.debug:159 -==> Parameters: 
2021-03-23 15:13:03.061 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 15:13:03.065 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==>  Preparing: select blog_id, blog_title, blog_goods, blog_read, blog_collection, blog_comment, created_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 order by (blog_read + blog_goods) desc limit 5 
2021-03-23 15:13:03.066 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -==> Parameters: 
2021-03-23 15:13:03.068 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.BlogMapper.recomRead.debug:159 -<==      Total: 1
2021-03-23 15:13:03.075 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:13:03.076 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)](String), 1(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), POST(String), 30(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:13:03.078 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:13:03.079 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/recomRead(String), [](String), 1(Integer), java.lang.ClassCastException: com.jg.blog.pojo.Admin cannot be cast to com.jg.blog.pojo.User
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionCount(BlogServiceImpl.java:171)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$318a9417.getCollectionCount(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$b37429f9.getCollectionCount(<generated>)
	at com.jg.blog.controller.BlogController.getCollection(BlogController.java:206)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$bb7e49e3.getCollection(<generated>)
(String), GET(String), 28(Long), {"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:13:03.086 DEBUG [http-nio-1000-exec-7]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:13:03.086 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:13:03.087 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /music/getList(String), [](String), 0(Integer), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
	at com.jg.blog.service.impl.MusicServiceImpl.getList(MusicServiceImpl.java:72)
	at com.jg.blog.controller.MusicController.getList(MusicController.java:126)
	at com.jg.blog.controller.MusicController$$FastClassBySpringCGLIB$$7a5ff1d7.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.MusicController$$EnhancerBySpringCGLIB$$46190d10.getList(<generated>)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'enabled' in 'where clause'
(String), GET(String), 0(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:13:03.090 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:13:03.091 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /link/list(String), [](String), 1(Integer), org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.CommentServiceImpl.getByBlog(CommentServiceImpl.java:67)
	at com.jg.blog.controller.CommentController.getByBlog(CommentController.java:53)
	at com.jg.blog.controller.CommentController$$FastClassBySpringCGLIB$$f47cbc11.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.CommentController$$EnhancerBySpringCGLIB$$10fa9ffe.getByBlog(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
(String), GET(String), 21(Long), {"code":20000,"data":[],"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:13:03.092 DEBUG [http-nio-1000-exec-10]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:13:03.094 DEBUG [http-nio-1000-exec-3]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:13:03.097 DEBUG [http-nio-1000-exec-8]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2021-03-23 15:13:19.586 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==>  Preparing: select blog_id, blog_title, blog_image, blog_goods, blog_read, blog_collection, blog_remark, blog_comment, blog_source, created_time, update_time,type_name from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 limit ?, ? 
2021-03-23 15:13:19.587 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -==> Parameters: 0(Integer), 10(Integer)
2021-03-23 15:13:19.588 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getByPage.debug:159 -<==      Total: 1
2021-03-23 15:13:19.589 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==>  Preparing: select count(*) from bl_blog as b inner join bl_type as t on type_id = blog_type where t.deleted = 0 and b.deleted = 0 
2021-03-23 15:13:19.590 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -==> Parameters: 
2021-03-23 15:13:19.591 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.BlogMapper.getCountByPage.debug:159 -<==      Total: 1
2021-03-23 15:13:19.597 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log( log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2021-03-23 15:13:19.598 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -==> Parameters: /blog/getByPage(String), [Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)](String), 1(Integer), null, POST(String), 14(Long), {"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}(String), 127.0.0.1(String)
2021-03-23 15:13:19.617 DEBUG [http-nio-1000-exec-2]com.jg.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1

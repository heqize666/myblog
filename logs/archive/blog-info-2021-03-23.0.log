2021-03-23 11:38:20.554 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-N5FMSO0 with PID 13316 (F:\it\myBlog\blog\target\classes started by heqize in F:\it\myBlog\blog)
2021-03-23 11:38:20.615 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2021-03-23 11:38:27.876 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2021-03-23 11:38:28.521 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 574ms. Found 4 MongoDB repository interfaces.
2021-03-23 11:38:30.261 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:30.598 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$51bf17d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:30.679 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:30.693 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3812564c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:30.700 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$1ee9fa8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:30.704 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2021-03-23 11:38:30.792 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:30.810 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:30.850 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:33.796 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2021-03-23 11:38:33.797 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:33.882 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:34.386 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:34.420 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:34.429 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:34.434 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:34.436 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:34.442 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:34.443 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:34.471 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#14fc9bd' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:34.473 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#14fc9bd' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:34.505 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#7742a45c' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:34.508 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#4026461d' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:34.511 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#4026461d' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:34.536 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.data.mongodb-org.springframework.boot.autoconfigure.mongo.MongoProperties' of type [org.springframework.boot.autoconfigure.mongo.MongoProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:34.538 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:34.540 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:34.543 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration' of type [org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:34.812 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[47.102.115.146:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2021-03-23 11:38:34.812 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 47.102.115.146:27017 to client view of cluster
2021-03-23 11:38:34.877 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongo' of type [com.mongodb.MongoClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:34.927 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoDbFactory' of type [org.springframework.data.mongodb.core.SimpleMongoDbFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:34.934 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:35.089 INFO  [cluster-ClusterId{value='605962ba628c4f597a614ea1', description='null'}-47.102.115.146:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:2576}] to 47.102.115.146:27017
2021-03-23 11:38:35.125 INFO  [cluster-ClusterId{value='605962ba628c4f597a614ea1', description='null'}-47.102.115.146:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=47.102.115.146:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 19]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=32596900}
2021-03-23 11:38:35.143 INFO  [cluster-ClusterId{value='605962ba628c4f597a614ea1', description='null'}-47.102.115.146:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2021-03-23 11:38:35.736 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoCustomConversions' of type [org.springframework.data.mongodb.core.convert.MongoCustomConversions] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:36.132 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoMappingContext' of type [org.springframework.data.mongodb.core.mapping.MongoMappingContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:36.249 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mappingMongoConverter' of type [org.springframework.data.mongodb.core.convert.MappingMongoConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:36.537 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoTemplate' of type [org.springframework.data.mongodb.core.MongoTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:37.403 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:37.414 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [com.sun.proxy.$Proxy106] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:37.443 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#43786627' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:37.444 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#43786627' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:37.445 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#467af68c' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:37.446 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#65e620b0' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:37.447 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#65e620b0' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:37.456 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:37.457 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:37.476 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:37.478 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:37.663 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:37.741 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 11:38:39.190 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:92 -Tomcat initialized with port(s): 1000 (http)
2021-03-23 11:38:39.240 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2021-03-23 11:38:39.240 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2021-03-23 11:38:39.240 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.29]
2021-03-23 11:38:39.242 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-03-23 11:38:39.243 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-03-23 11:38:39.243 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-03-23 11:38:39.243 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-03-23 11:38:40.324 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-03-23 11:38:40.677 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2021-03-23 11:38:40.678 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 19439 ms
2021-03-23 11:38:44.650 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2021-03-23 11:38:44.693 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:204 -Tomcat started on port(s): 1000 (http) with context path ''
2021-03-23 11:38:44.695 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 27.583 seconds (JVM running for 31.422)
2021-03-23 11:39:41.285 INFO  [http-nio-1000-exec-10]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-03-23 11:39:41.285 INFO  [http-nio-1000-exec-10]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2021-03-23 11:39:41.301 INFO  [http-nio-1000-exec-10]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 16 ms
2021-03-23 11:39:41.536 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /admin/login
2021-03-23 11:39:41.536 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:39:41.537 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:39:41.539 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.AdminController.login
2021-03-23 11:39:41.539 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=1234565)]
2021-03-23 11:39:41.759 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 223
2021-03-23 11:39:41.853 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":40002,"msg":"用户名或密码错误！"}
2021-03-23 11:41:12.983 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /admin/login
2021-03-23 11:41:12.983 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:41:12.984 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:41:12.984 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.AdminController.login
2021-03-23 11:41:12.984 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]
2021-03-23 11:41:13.029 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 46
2021-03-23 11:41:13.030 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"token":"68A9086057C838741B994DF22BE2DBBC"},"msg":"操作成功！"}
2021-03-23 11:41:13.084 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /admin/info
2021-03-23 11:41:13.085 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 11:41:13.085 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:41:13.085 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2021-03-23 11:41:13.085 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 11:41:13.086 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 2
2021-03-23 11:41:13.091 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}
2021-03-23 11:41:13.493 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /type/getList
2021-03-23 11:41:13.494 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 11:41:13.494 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:41:13.494 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.TypeController.getList
2021-03-23 11:41:13.494 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 11:41:13.505 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 12
2021-03-23 11:41:13.509 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 11:41:15.655 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /type/listBack
2021-03-23 11:41:15.655 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 11:41:15.655 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:41:15.656 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.TypeController.list
2021-03-23 11:41:15.656 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 11:41:15.663 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 8
2021-03-23 11:41:15.663 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 11:41:17.901 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 11:41:17.901 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:41:17.901 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:41:17.902 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 11:41:17.902 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:41:17.980 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 79
2021-03-23 11:41:17.987 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-01-07 14:39:32"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 11:41:18.144 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /type/listBack
2021-03-23 11:41:18.145 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 11:41:18.145 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:41:18.145 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.TypeController.list
2021-03-23 11:41:18.146 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 11:41:18.153 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 9
2021-03-23 11:41:18.154 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 11:41:22.849 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /admin/getAdmin
2021-03-23 11:41:22.850 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 11:41:22.850 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:41:22.850 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.AdminController.getAdmin
2021-03-23 11:41:22.850 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 11:41:22.859 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 10
2021-03-23 11:41:22.859 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}
2021-03-23 11:41:25.512 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /user/getByPage
2021-03-23 11:41:25.513 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:41:25.513 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:41:25.513 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.UserController.getByPage
2021-03-23 11:41:25.513 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:41:25.555 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 43
2021-03-23 11:41:25.558 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:04:02","name":"hqz","nickname":"鲜肉","sex":1,"updateTime":"2021-01-03 14:12:46","userId":1,"username":"he"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 11:41:31.277 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /type/listBack
2021-03-23 11:41:31.278 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 11:41:31.278 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:41:31.278 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.TypeController.list
2021-03-23 11:41:31.278 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 11:41:31.284 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 7
2021-03-23 11:41:31.284 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 11:41:35.503 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /type/listBack
2021-03-23 11:41:35.503 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 11:41:35.503 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:41:35.534 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.TypeController.list
2021-03-23 11:41:35.535 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 11:41:35.541 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 38
2021-03-23 11:41:35.542 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 11:41:35.888 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 11:41:35.888 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:41:35.889 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:41:35.889 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 11:41:35.889 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:41:35.902 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 14
2021-03-23 11:41:35.902 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-01-07 14:39:32"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 11:41:36.191 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /type/listBack
2021-03-23 11:41:36.191 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 11:41:36.191 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:41:36.192 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.TypeController.list
2021-03-23 11:41:36.192 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 11:41:36.198 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 7
2021-03-23 11:41:36.198 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 11:41:37.653 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /type/listBack
2021-03-23 11:41:37.653 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 11:41:37.654 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:41:37.654 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.TypeController.list
2021-03-23 11:41:37.654 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 11:41:37.861 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 208
2021-03-23 11:41:37.861 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 11:41:39.120 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 11:41:39.120 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:41:39.120 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:41:39.120 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 11:41:39.121 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:41:39.121 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /type/listBack
2021-03-23 11:41:39.121 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 11:41:39.121 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:41:39.121 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.TypeController.list
2021-03-23 11:41:39.122 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 11:41:39.133 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 12
2021-03-23 11:41:39.133 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 11:41:39.136 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 16
2021-03-23 11:41:39.137 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-01-07 14:39:32"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 11:41:40.543 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /admin/getAdmin
2021-03-23 11:41:40.543 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 11:41:40.543 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:41:40.543 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.AdminController.getAdmin
2021-03-23 11:41:40.544 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 11:41:40.551 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 8
2021-03-23 11:41:40.551 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}
2021-03-23 11:41:42.258 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /user/getByPage
2021-03-23 11:41:42.258 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:41:42.259 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:41:42.259 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.UserController.getByPage
2021-03-23 11:41:42.259 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:41:42.272 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 14
2021-03-23 11:41:42.273 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:04:02","name":"hqz","nickname":"鲜肉","sex":1,"updateTime":"2021-01-03 14:12:46","userId":1,"username":"he"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 11:41:43.085 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /type/listBack
2021-03-23 11:41:43.086 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 11:41:43.086 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:41:43.086 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.TypeController.list
2021-03-23 11:41:43.086 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 11:41:43.092 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 7
2021-03-23 11:41:43.093 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 11:43:10.347 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 11:43:10.348 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:43:10.348 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:43:10.349 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 11:43:10.349 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:43:10.354 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /type/listBack
2021-03-23 11:43:10.355 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 11:43:10.355 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:43:10.355 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.TypeController.list
2021-03-23 11:43:10.355 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 11:43:10.360 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 13
2021-03-23 11:43:10.361 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-01-07 14:39:32"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 11:43:10.366 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 12
2021-03-23 11:43:10.368 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"enable":1,"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 11:48:11.128 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 11:48:11.129 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:48:11.129 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:48:11.129 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 11:48:11.129 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:48:11.158 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 30
2021-03-23 11:48:11.161 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":259,"totalPage":26},"msg":"操作成功！"}
2021-03-23 11:48:22.019 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 11:48:22.019 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:48:22.019 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:48:22.020 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 11:48:22.020 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=26, totalCount=259, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={logStatus=1}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:48:22.038 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 19
2021-03-23 11:48:22.039 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":1},"sortMethod":"asc","totalCount":248,"totalPage":25},"msg":"操作成功！"}
2021-03-23 11:48:25.698 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 11:48:25.698 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:48:25.698 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:48:25.699 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 11:48:25.699 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=25, totalCount=248, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={logStatus=0}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:48:25.715 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 17
2021-03-23 11:48:25.716 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}
2021-03-23 11:48:30.485 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 11:48:30.486 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:48:30.486 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:48:30.486 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 11:48:30.486 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:48:30.500 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 15
2021-03-23 11:48:30.501 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}
2021-03-23 11:48:54.666 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 11:48:54.666 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:48:54.666 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:48:54.666 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 11:48:54.667 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:48:54.680 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 14
2021-03-23 11:48:54.681 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}
2021-03-23 11:49:01.894 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 11:49:01.894 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:49:01.895 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:49:01.895 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 11:49:01.895 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=0, logMethod=}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:49:01.909 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 15
2021-03-23 11:49:01.910 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":0,"logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}
2021-03-23 11:49:11.836 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 11:49:11.836 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:49:11.837 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:49:11.837 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 11:49:11.837 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=0, logMethod=}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:49:11.851 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 15
2021-03-23 11:49:11.852 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":0,"logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}
2021-03-23 11:49:16.782 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /admin/info
2021-03-23 11:49:16.782 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 11:49:16.783 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:49:16.783 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2021-03-23 11:49:16.783 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 11:49:16.783 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 1
2021-03-23 11:49:16.784 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}
2021-03-23 11:49:17.137 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 11:49:17.137 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:49:17.137 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:49:17.137 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 11:49:17.138 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:49:17.143 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /type/getList
2021-03-23 11:49:17.145 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 11:49:17.146 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:49:17.146 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.TypeController.getList
2021-03-23 11:49:17.147 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 11:49:17.152 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 15
2021-03-23 11:49:17.153 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":263,"totalPage":27},"msg":"操作成功！"}
2021-03-23 11:49:17.162 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 19
2021-03-23 11:49:17.162 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 11:49:21.994 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 11:49:21.995 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:49:21.995 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:49:21.995 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 11:49:21.995 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=27, totalCount=263, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={logStatus=0}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:49:22.009 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 15
2021-03-23 11:49:22.009 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":0},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}
2021-03-23 11:50:04.315 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 11:50:04.315 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:50:04.315 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:50:04.315 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 11:50:04.316 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:50:19.698 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 15383
2021-03-23 11:50:19.698 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}
2021-03-23 11:50:53.814 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 11:50:53.814 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:50:53.815 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:50:53.815 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 11:50:53.815 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=0, logMethod=GET}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:52:02.044 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 68230
2021-03-23 11:52:02.045 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":0,"logMethod":"GET"},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}
2021-03-23 11:52:22.676 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 11:52:22.677 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:52:22.677 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:52:22.677 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 11:52:22.677 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=GET}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:52:33.403 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 10727
2021-03-23 11:52:33.403 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":"","logMethod":"GET"},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}
2021-03-23 11:53:31.812 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 11:53:31.813 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:53:31.813 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:53:31.813 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 11:53:31.814 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=POST}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:53:34.239 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 2427
2021-03-23 11:53:34.240 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:33:22","logId":220,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:39:32","logId":221,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java基础知识\"}],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":"POST"},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}
2021-03-23 11:53:40.120 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 11:53:40.121 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:53:40.121 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:53:40.121 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 11:53:40.121 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=1, logMethod=}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:53:41.765 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 1645
2021-03-23 11:53:41.766 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":1,"logMethod":""},"sortMethod":"asc","totalCount":254,"totalPage":26},"msg":"操作成功！"}
2021-03-23 11:54:21.602 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /admin/info
2021-03-23 11:54:21.602 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 11:54:21.603 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:54:21.603 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2021-03-23 11:54:21.603 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 11:54:21.603 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 1
2021-03-23 11:54:21.603 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}
2021-03-23 11:54:22.095 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 11:54:22.096 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:54:22.096 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:54:22.096 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 11:54:22.097 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:54:22.105 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /type/getList
2021-03-23 11:54:22.105 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 11:54:22.106 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:54:22.106 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.TypeController.getList
2021-03-23 11:54:22.106 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 11:54:26.436 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 4341
2021-03-23 11:54:26.437 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":267,"totalPage":27},"msg":"操作成功！"}
2021-03-23 11:54:26.441 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 4336
2021-03-23 11:54:26.441 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 11:54:32.953 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 11:54:32.954 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:54:32.954 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:54:32.954 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 11:54:32.954 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=27, totalCount=267, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={logMethod=GET}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:54:32.970 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 17
2021-03-23 11:54:32.971 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:31:21","logId":11,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"id\":1,\"name\":\"he\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":10,"logUrl":"/admin/getAdmin"},{"createdTime":"2020-12-24 11:33:21","logId":12,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:40:29","logId":15,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":3,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 13:52:51","logId":19,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":3,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:01:47","logId":20,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:06:39","logId":22,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:06:52","logId":24,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":3,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:08:03","logId":26,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logMethod":"GET"},"sortMethod":"asc","totalCount":157,"totalPage":16},"msg":"操作成功！"}
2021-03-23 11:54:56.594 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 11:54:56.595 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:54:56.595 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:54:56.595 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 11:54:56.595 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=16, totalCount=157, list=[Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=11, logUrl=/admin/getAdmin, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=10, logResult={"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:31:21), Log(logId=12, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:33:21), Log(logId=15, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=3, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:40:29), Log(logId=19, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=3, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 13:52:51), Log(logId=20, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 14:01:47), Log(logId=22, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 14:06:39), Log(logId=24, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=3, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 14:06:52), Log(logId=26, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 14:08:03)], params={logMethod=GET, logStatus=0}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:54:56.609 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 15
2021-03-23 11:54:56.609 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logMethod":"GET","logStatus":0},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}
2021-03-23 11:55:04.329 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 11:55:04.330 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:55:04.330 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:55:04.330 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 11:55:04.330 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=4, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02)], params={logMethod=, logStatus=0}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:55:04.343 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 14
2021-03-23 11:55:04.344 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logMethod":"","logStatus":0},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}
2021-03-23 11:55:31.072 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 11:55:31.073 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:55:31.073 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:55:31.074 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 11:55:31.074 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=4, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02)], params={logMethod=POST, logStatus=0}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:55:31.090 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 18
2021-03-23 11:55:31.091 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:33:22","logId":220,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:39:32","logId":221,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java基础知识\"}],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logMethod":"POST","logStatus":0},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}
2021-03-23 11:56:16.953 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 11:56:16.954 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 11:56:16.954 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 11:56:16.954 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 11:56:16.955 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=4, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02)], params={logMethod=POST, logStatus=0}, sortColumn=null, sortMethod=asc)]
2021-03-23 11:56:16.968 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 15
2021-03-23 11:56:16.969 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:33:22","logId":220,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:39:32","logId":221,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java基础知识\"}],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logMethod":"POST","logStatus":0},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}
2021-03-23 13:23:40.377 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /admin/login
2021-03-23 13:23:40.381 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:23:40.381 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:23:40.382 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.AdminController.login
2021-03-23 13:23:40.383 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]
2021-03-23 13:23:40.406 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 29
2021-03-23 13:23:40.407 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"token":"4FB6D7130AE12D33781C4510536282FF"},"msg":"操作成功！"}
2021-03-23 13:23:40.462 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /admin/info
2021-03-23 13:23:40.462 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 13:23:40.463 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:23:40.463 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2021-03-23 13:23:40.463 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 13:23:40.464 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 2
2021-03-23 13:23:40.464 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}
2021-03-23 13:23:40.949 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:23:40.950 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:23:40.950 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:23:40.950 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:23:40.950 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:23:40.957 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /type/getList
2021-03-23 13:23:40.958 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 13:23:40.958 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:23:40.958 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.TypeController.getList
2021-03-23 13:23:40.959 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 13:23:40.968 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 11
2021-03-23 13:23:40.969 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 13:23:40.973 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 24
2021-03-23 13:23:40.974 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":273,"totalPage":28},"msg":"操作成功！"}
2021-03-23 13:23:42.834 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:23:42.834 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:23:42.835 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:23:42.835 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:23:42.835 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=28, totalCount=273, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:23:42.862 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 28
2021-03-23 13:23:42.863 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":275,"totalPage":28},"msg":"操作成功！"}
2021-03-23 13:23:45.990 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:23:45.991 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:23:45.991 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:23:45.992 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:23:45.992 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=28, totalCount=275, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={logStatus=1}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:23:46.046 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 56
2021-03-23 13:23:46.046 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":1},"sortMethod":"asc","totalCount":264,"totalPage":27},"msg":"操作成功！"}
2021-03-23 13:23:48.136 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:23:48.137 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:23:48.137 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:23:48.137 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:23:48.138 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=27, totalCount=264, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={logStatus=}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:23:48.156 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 20
2021-03-23 13:23:48.157 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}
2021-03-23 13:23:50.358 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:23:50.359 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:23:50.359 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:23:50.361 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:23:50.362 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=GET}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:23:50.385 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 27
2021-03-23 13:23:50.385 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":"","logMethod":"GET"},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}
2021-03-23 13:23:56.423 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:23:56.424 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:23:56.424 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:23:56.424 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:23:56.426 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=POST}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:23:56.457 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 34
2021-03-23 13:23:56.458 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:33:22","logId":220,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:39:32","logId":221,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java基础知识\"}],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":"POST"},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}
2021-03-23 13:23:58.817 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:23:58.818 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:23:58.818 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:23:58.818 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:23:58.820 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:23:58.842 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 25
2021-03-23 13:23:58.842 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}
2021-03-23 13:24:18.383 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:24:18.384 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:24:18.384 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:24:18.384 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:24:18.385 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=GET}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:24:18.409 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 26
2021-03-23 13:24:18.409 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logStatus":"","logMethod":"GET"},"sortMethod":"asc","totalCount":4,"totalPage":1},"msg":"操作成功！"}
2021-03-23 13:24:29.981 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:24:29.982 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:24:29.983 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:24:29.983 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:24:29.984 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:24:30.005 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 24
2021-03-23 13:24:30.006 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}
2021-03-23 13:25:42.042 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:25:42.043 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:25:42.043 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:25:42.043 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:25:42.044 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:25:42.077 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 35
2021-03-23 13:25:42.078 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}
2021-03-23 13:27:57.284 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:27:57.284 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:27:57.284 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:27:57.285 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:27:57.286 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:27:57.306 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 22
2021-03-23 13:27:57.307 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}
2021-03-23 13:28:38.489 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:28:38.490 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:28:38.490 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:28:38.490 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:28:38.492 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:28:38.515 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 26
2021-03-23 13:28:38.515 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}
2021-03-23 13:30:57.814 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /admin/info
2021-03-23 13:30:57.815 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 13:30:57.815 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:30:57.815 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2021-03-23 13:30:57.816 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 13:30:57.816 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 2
2021-03-23 13:30:57.817 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}
2021-03-23 13:30:58.171 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:30:58.171 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:30:58.171 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /type/getList
2021-03-23 13:30:58.171 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:30:58.171 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 13:30:58.172 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:30:58.172 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:30:58.172 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:30:58.172 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.TypeController.getList
2021-03-23 13:30:58.172 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 13:30:58.193 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 22
2021-03-23 13:30:58.193 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 13:30:58.201 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 30
2021-03-23 13:30:58.201 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":279,"totalPage":28},"msg":"操作成功！"}
2021-03-23 13:31:11.227 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:31:11.228 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:31:11.228 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:31:11.228 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:31:11.228 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=28, totalCount=279, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={logMethod=POST}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:31:11.245 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 18
2021-03-23 13:31:11.245 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:35:21","logId":13,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:36:13","logId":14,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"}],"pageSize":10,"params":{"logMethod":"POST"},"sortMethod":"asc","totalCount":117,"totalPage":12},"msg":"操作成功！"}
2021-03-23 13:31:32.767 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:31:32.768 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:31:32.768 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:31:32.768 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:31:32.769 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=12, totalCount=117, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=13, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:35:21), Log(logId=14, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:36:13)], params={logMethod=POST, logStatus=1}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:31:32.789 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 22
2021-03-23 13:31:32.790 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:35:21","logId":13,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:36:13","logId":14,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"}],"pageSize":10,"params":{"logMethod":"POST","logStatus":1},"sortMethod":"asc","totalCount":110,"totalPage":11},"msg":"操作成功！"}
2021-03-23 13:32:32.615 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:32:32.616 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:32:32.616 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:32:32.618 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:32:32.619 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:32:32.673 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 58
2021-03-23 13:32:32.674 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}
2021-03-23 13:32:36.754 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:32:36.755 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:32:36.755 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:32:36.755 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:32:36.765 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:32:36.818 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 64
2021-03-23 13:32:36.821 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}
2021-03-23 13:33:16.338 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:33:16.338 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:33:16.338 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:33:16.339 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:33:16.340 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logStatus=, logMethod=}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:34:18.628 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 62290
2021-03-23 13:34:18.628 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logStatus":"","logMethod":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}
2021-03-23 13:34:31.068 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:34:31.068 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:34:31.068 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:34:31.069 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:34:31.069 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:34:42.415 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 11347
2021-03-23 13:34:42.416 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":284,"totalPage":29},"msg":"操作成功！"}
2021-03-23 13:34:50.132 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:34:50.132 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:34:50.133 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:34:50.134 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:34:50.134 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={logMethod=POST}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:35:06.601 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 16469
2021-03-23 13:35:06.602 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:35:21","logId":13,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:36:13","logId":14,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"}],"pageSize":10,"params":{"logMethod":"POST"},"sortMethod":"asc","totalCount":121,"totalPage":13},"msg":"操作成功！"}
2021-03-23 13:35:11.026 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:35:11.026 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:35:11.027 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:35:11.027 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:35:11.027 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={logMethod=}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:37:10.776 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 119750
2021-03-23 13:37:10.777 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logMethod":""},"sortMethod":"asc","totalCount":286,"totalPage":29},"msg":"操作成功！"}
2021-03-23 13:37:23.387 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:37:23.388 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:37:23.388 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:37:23.389 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:37:23.389 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={logMethod=, logStatus=1}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:37:27.396 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 4009
2021-03-23 13:37:27.397 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logMethod":"","logStatus":1},"sortMethod":"asc","totalCount":275,"totalPage":28},"msg":"操作成功！"}
2021-03-23 13:37:33.066 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:37:33.067 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:37:33.067 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:37:33.068 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:37:33.068 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=28, totalCount=275, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={logMethod=, logStatus=}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:37:35.894 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 2828
2021-03-23 13:37:35.895 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logMethod":"","logStatus":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}
2021-03-23 13:37:55.805 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:37:55.806 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:37:55.806 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:37:55.806 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:37:55.807 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logMethod=POST, logStatus=}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:38:06.243 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 10438
2021-03-23 13:38:06.244 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:33:22","logId":220,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:39:32","logId":221,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java基础知识\"}],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logMethod":"POST","logStatus":""},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}
2021-03-23 13:38:45.815 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:38:45.815 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:38:45.816 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:38:45.816 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:38:45.817 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=2, totalCount=12, list=[Log(logId=84, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult=null, logIp=127.0.0.1, createdTime=2020-12-24 20:49:46), Log(logId=85, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","userId":1,"username":"he"},"token":"B43F68109F7C0CBD625F0E61C513D983"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:49), Log(logId=86, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:49:51), Log(logId=87, logUrl=/blog/getCollectionList, logParams=[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
	at com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)
	at com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)
Caused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:10), Log(logId=88, logUrl=/user/commentAndCollectionCount, logParams=[], logStatus=0, logMessage=org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
	at com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)
	at com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)
	at com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)
Caused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {"ok": 0.0, "errmsg": "command count requires authentication", "code": 13, "codeName": "Unauthorized"}
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:50:11), Log(logId=100, logUrl=/admin/info, logParams=[], logStatus=0, logMessage=java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin
	at com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)
	at com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)
, logMethod=GET, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:54:02), Log(logId=111, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:05), Log(logId=112, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":[],"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:57:11), Log(logId=113, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25), Log(logId=114, logUrl=/blog/save, logParams=[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)], logStatus=0, logMessage=org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline
### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
	at com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)
	at com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)
	at com.jg.blog.controller.BlogController.save(BlogController.java:43)
	at com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)
	at com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)
	at com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null
, logMethod=POST, logTime=0, logResult={"code":20000,"data":{"currentPage":1,"index":0,"list":[],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":0,"totalPage":0},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 20:59:25)], params={logMethod=POST, logStatus=}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:38:45.830 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 15
2021-03-23 13:38:45.831 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:33:22","logId":220,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2021-01-07 14:39:32","logId":221,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:51)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$eeedb97d.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$70d74f5f.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$897ec348.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=12, blogImage=null, blogContent=<p>哇</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=ww, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[{\"typeBlogCount\":0,\"typeId\":6,\"typeName\":\"java基础知识\"}],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logMethod":"POST","logStatus":""},"sortMethod":"asc","totalCount":8,"totalPage":1},"msg":"操作成功！"}
2021-03-23 13:47:22.988 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2021-03-23 13:47:23.003 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2021-03-23 13:47:31.430 INFO  [main]com.jg.blog.BlogApplication.logStarting:55 -Starting BlogApplication on DESKTOP-N5FMSO0 with PID 7432 (F:\it\myBlog\blog\target\classes started by heqize in F:\it\myBlog\blog)
2021-03-23 13:47:31.435 INFO  [main]com.jg.blog.BlogApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2021-03-23 13:47:32.467 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2021-03-23 13:47:32.559 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 86ms. Found 4 MongoDB repository interfaces.
2021-03-23 13:47:32.898 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:33.007 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.jg.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$b388276] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:33.058 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:33.070 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$f18bc0f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:33.074 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$d8636534] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:33.078 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2021-03-23 13:47:33.135 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:33.151 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:33.176 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:34.772 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2021-03-23 13:47:34.772 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:34.836 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.079 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.085 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.093 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.098 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.100 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.jg.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.104 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.105 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userMapper' of type [com.sun.proxy.$Proxy89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.124 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#74960e9d' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.126 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#74960e9d' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.164 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#5d124d29' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.170 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#49671897' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.175 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#49671897' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.198 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.data.mongodb-org.springframework.boot.autoconfigure.mongo.MongoProperties' of type [org.springframework.boot.autoconfigure.mongo.MongoProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.200 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryDependentConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.201 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDbFactoryConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.204 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration' of type [org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.280 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[47.102.115.146:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2021-03-23 13:47:35.281 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 47.102.115.146:27017 to client view of cluster
2021-03-23 13:47:35.335 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongo' of type [com.mongodb.MongoClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.346 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoDbFactory' of type [org.springframework.data.mongodb.core.SimpleMongoDbFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.356 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration' of type [org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.445 INFO  [cluster-ClusterId{value='605980f77008300c85cbb0f7', description='null'}-47.102.115.146:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:2580}] to 47.102.115.146:27017
2021-03-23 13:47:35.446 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoCustomConversions' of type [org.springframework.data.mongodb.core.convert.MongoCustomConversions] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.470 INFO  [cluster-ClusterId{value='605980f77008300c85cbb0f7', description='null'}-47.102.115.146:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=47.102.115.146:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 0, 19]}, minWireVersion=0, maxWireVersion=7, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=22917200}
2021-03-23 13:47:35.471 INFO  [cluster-ClusterId{value='605980f77008300c85cbb0f7', description='null'}-47.102.115.146:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2021-03-23 13:47:35.473 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoMappingContext' of type [org.springframework.data.mongodb.core.mapping.MongoMappingContext] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.525 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mappingMongoConverter' of type [org.springframework.data.mongodb.core.convert.MappingMongoConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.582 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mongoTemplate' of type [org.springframework.data.mongodb.core.MongoTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.829 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.840 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'commentDao' of type [com.sun.proxy.$Proxy106] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.870 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#27bb74e1' of type [org.springframework.beans.factory.config.PropertiesFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.870 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#27bb74e1' of type [java.util.Properties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.872 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#e3ed455' of type [org.springframework.data.repository.core.support.PropertiesBasedNamedQueries] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.873 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#2e3cd732' of type [org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.873 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean '(inner bean)#2e3cd732' of type [org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.883 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.884 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'collectionDao' of type [com.sun.proxy.$Proxy107] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.905 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.jg.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.907 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.jg.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.950 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:35.992 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2021-03-23 13:47:36.295 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:92 -Tomcat initialized with port(s): 1000 (http)
2021-03-23 13:47:36.305 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-1000"]
2021-03-23 13:47:36.306 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2021-03-23 13:47:36.306 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.29]
2021-03-23 13:47:36.308 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -An older version [1.2.14] of the APR based Apache Tomcat Native library is installed, while Tomcat recommends a minimum version of [1.2.23]
2021-03-23 13:47:36.308 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -Loaded APR based Apache Tomcat Native library [1.2.14] using APR version [1.6.2].
2021-03-23 13:47:36.308 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR capabilities: IPv6 [true], sendfile [true], accept filters [false], random [true].
2021-03-23 13:47:36.308 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -APR/OpenSSL configuration: useAprConnector [false], useOpenSSL [true]
2021-03-23 13:47:37.392 INFO  [main]org.apache.catalina.core.AprLifecycleListener.log:173 -OpenSSL successfully initialized [OpenSSL 1.0.2l  25 May 2017]
2021-03-23 13:47:37.511 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2021-03-23 13:47:37.511 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 5968 ms
2021-03-23 13:47:39.492 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-1000"]
2021-03-23 13:47:39.524 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:204 -Tomcat started on port(s): 1000 (http) with context path ''
2021-03-23 13:47:39.527 INFO  [main]com.jg.blog.BlogApplication.logStarted:61 -Started BlogApplication in 8.83 seconds (JVM running for 10.6)
2021-03-23 13:47:53.072 INFO  [http-nio-1000-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-03-23 13:47:53.073 INFO  [http-nio-1000-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2021-03-23 13:47:53.089 INFO  [http-nio-1000-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 16 ms
2021-03-23 13:47:58.985 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /admin/login
2021-03-23 13:47:58.986 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:47:58.986 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:47:58.988 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.AdminController.login
2021-03-23 13:47:58.989 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]
2021-03-23 13:47:59.084 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 99
2021-03-23 13:47:59.086 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"token":"CAB4384B63861B97D5A79EA8C47C9619"},"msg":"操作成功！"}
2021-03-23 13:47:59.539 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /admin/info
2021-03-23 13:47:59.540 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 13:47:59.540 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:47:59.540 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.AdminController.getLoginInfo
2021-03-23 13:47:59.540 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 13:47:59.541 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 2
2021-03-23 13:47:59.546 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}
2021-03-23 13:47:59.796 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /type/getList
2021-03-23 13:47:59.797 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 13:47:59.798 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:47:59.798 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.TypeController.getList
2021-03-23 13:47:59.799 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 13:47:59.811 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 15
2021-03-23 13:47:59.815 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 13:48:00.089 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:48:00.089 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:48:00.090 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:48:00.090 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:48:00.090 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:48:00.140 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 51
2021-03-23 13:48:00.147 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":292,"totalPage":30},"msg":"操作成功！"}
2021-03-23 13:48:03.233 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:48:03.233 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:48:03.234 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:48:03.234 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:48:03.235 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=30, totalCount=292, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={logMethod=GET}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:48:03.258 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 25
2021-03-23 13:48:03.259 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:31:21","logId":11,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"id\":1,\"name\":\"he\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":10,"logUrl":"/admin/getAdmin"},{"createdTime":"2020-12-24 11:33:21","logId":12,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:40:29","logId":15,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":3,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 13:52:51","logId":19,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":3,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:01:47","logId":20,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:06:39","logId":22,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:06:52","logId":24,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":3,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:08:03","logId":26,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logMethod":"GET"},"sortMethod":"asc","totalCount":163,"totalPage":17},"msg":"操作成功！"}
2021-03-23 13:48:05.200 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:48:05.200 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:48:05.201 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:48:05.201 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:48:05.201 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=17, totalCount=163, list=[Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=11, logUrl=/admin/getAdmin, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=10, logResult={"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:31:21), Log(logId=12, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:33:21), Log(logId=15, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=3, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:40:29), Log(logId=19, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=3, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 13:52:51), Log(logId=20, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 14:01:47), Log(logId=22, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 14:06:39), Log(logId=24, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=3, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 14:06:52), Log(logId=26, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 14:08:03)], params={logMethod=}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:48:05.218 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 18
2021-03-23 13:48:05.219 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logMethod":""},"sortMethod":"asc","totalCount":294,"totalPage":30},"msg":"操作成功！"}
2021-03-23 13:48:11.231 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:48:11.231 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:48:11.232 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:48:11.232 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:48:11.232 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=30, totalCount=294, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={logMethod=, logStatus=1}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:48:11.249 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 18
2021-03-23 13:48:11.250 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logMethod":"","logStatus":1},"sortMethod":"asc","totalCount":283,"totalPage":29},"msg":"操作成功！"}
2021-03-23 13:48:13.079 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:48:13.079 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:48:13.080 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:48:13.080 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:48:13.080 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=29, totalCount=283, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={logMethod=GET, logStatus=1}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:48:13.095 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 16
2021-03-23 13:48:13.096 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:31:21","logId":11,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"id\":1,\"name\":\"he\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":10,"logUrl":"/admin/getAdmin"},{"createdTime":"2020-12-24 11:33:21","logId":12,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:40:29","logId":15,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":3,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 13:52:51","logId":19,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":3,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:01:47","logId":20,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:06:39","logId":22,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:06:52","logId":24,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":3,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 14:08:03","logId":26,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logMethod":"GET","logStatus":1},"sortMethod":"asc","totalCount":159,"totalPage":16},"msg":"操作成功！"}
2021-03-23 13:48:14.731 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:48:14.731 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:48:14.731 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:48:14.731 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:48:14.732 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=16, totalCount=159, list=[Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=11, logUrl=/admin/getAdmin, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=10, logResult={"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:31:21), Log(logId=12, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:33:21), Log(logId=15, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=3, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:40:29), Log(logId=19, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=3, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 13:52:51), Log(logId=20, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 14:01:47), Log(logId=22, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 14:06:39), Log(logId=24, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=3, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 14:06:52), Log(logId=26, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 14:08:03)], params={logMethod=, logStatus=1}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:48:14.751 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 20
2021-03-23 13:48:14.752 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{"logMethod":"","logStatus":1},"sortMethod":"asc","totalCount":285,"totalPage":29},"msg":"操作成功！"}
2021-03-23 13:48:23.157 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 13:48:23.157 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:48:23.158 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:48:23.159 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 13:48:23.159 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=29, totalCount=285, list=[Log(logId=1, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=26566, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:23), Log(logId=2, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:06:42), Log(logId=3, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=127310, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:13), Log(logId=4, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=5320, logResult={"code":20000,"data":{"token":"4FF04EE365817DD68B215F95968DAC30"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:09:32), Log(logId=5, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=1, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:10:55), Log(logId=6, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=20, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=192.168.69.137, createdTime=2020-12-24 11:24:28), Log(logId=7, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)], logStatus=1, logMessage=null, logMethod=POST, logTime=10396, logResult={"code":40002,"msg":"用户名或密码错误！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:26:31), Log(logId=8, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=16783, logResult={"code":20000,"data":{"token":"325CFAD36A27B9B55A812F518E476D4C"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:31), Log(logId=9, logUrl=/admin/login, logParams=[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)], logStatus=1, logMessage=null, logMethod=POST, logTime=11, logResult={"code":20000,"data":{"token":"070B5FECB1528984D48B1C5BF38EB338"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43), Log(logId=10, logUrl=/admin/info, logParams=[], logStatus=1, logMessage=null, logMethod=GET, logTime=2, logResult={"code":20000,"data":{"name":"he","password":"","username":"admin"},"msg":"操作成功！"}, logIp=127.0.0.1, createdTime=2020-12-24 11:28:43)], params={logMethod=, logStatus=}, sortColumn=null, sortMethod=asc)]
2021-03-23 13:48:23.175 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 18
2021-03-23 13:48:23.176 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 20:49:46","logId":84,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:49:49","logId":85,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":{\"user\":{\"nickname\":\"鲜肉\",\"password\":\"\",\"userId\":1,\"username\":\"he\"},\"token\":\"B43F68109F7C0CBD625F0E61C513D983\"},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:49:51","logId":86,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:50:10","logId":87,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017; nested exception is com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n\tat com.jg.blog.service.impl.BlogServiceImpl.getCollectionByPage(BlogServiceImpl.java:184)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.getCollectionByPage(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.getCollectionByPage(<generated>)\n\tat com.jg.blog.controller.BlogController.getCollectionList(BlogController.java:217)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.getCollectionList(<generated>)\nCaused by: com.mongodb.MongoQueryException: Query failed with error code 13 and error message 'command find requires authentication' on server 47.102.115.146:27017\n","logMethod":"POST","logParams":"[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/getCollectionList"},{"createdTime":"2020-12-24 20:50:11","logId":88,"logIp":"127.0.0.1","logMessage":"org.springframework.data.mongodb.UncategorizedMongoDbException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}; nested exception is com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n\tat com.jg.blog.service.impl.UserServiceImpl.getCommentAndCollectionCount(UserServiceImpl.java:112)\n\tat com.jg.blog.controller.UserController.commentAndCollectionCount(UserController.java:175)\n\tat com.jg.blog.controller.UserController$$FastClassBySpringCGLIB$$67991cd1.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.UserController$$EnhancerBySpringCGLIB$$a319cb04.commentAndCollectionCount(<generated>)\nCaused by: com.mongodb.MongoCommandException: Command failed with error 13 (Unauthorized): 'command count requires authentication' on server 47.102.115.146:27017. The full response is {\"ok\": 0.0, \"errmsg\": \"command count requires authentication\", \"code\": 13, \"codeName\": \"Unauthorized\"}\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"created_time\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/user/commentAndCollectionCount"},{"createdTime":"2020-12-24 20:54:02","logId":100,"logIp":"127.0.0.1","logMessage":"java.lang.ClassCastException: com.jg.blog.pojo.User cannot be cast to com.jg.blog.pojo.Admin\n\tat com.jg.blog.controller.AdminController.getLoginInfo(AdminController.java:66)\n\tat com.jg.blog.controller.AdminController$$FastClassBySpringCGLIB$$131e1a81.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.AdminController$$EnhancerBySpringCGLIB$$291cd214.getLoginInfo(<generated>)\n","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_goods\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 20:57:05","logId":111,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:57:11","logId":112,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":[],\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":113,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortMethod\":\"asc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"},{"createdTime":"2020-12-24 20:59:25","logId":114,"logIp":"127.0.0.1","logMessage":"org.springframework.dao.DataIntegrityViolationException: \n### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n### The error may involve com.jg.blog.mapper.BlogMapper.save-Inline\n### Cause: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n; Column 'blog_type' cannot be null; nested exception is java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n\tat com.jg.blog.service.impl.BlogServiceImpl.save(BlogServiceImpl.java:52)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$9b6c6e94.save(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$FastClassBySpringCGLIB$$ad9b5dc6.invoke(<generated>)\n\tat com.jg.blog.service.impl.BlogServiceImpl$$EnhancerBySpringCGLIB$$1d560476.save(<generated>)\n\tat com.jg.blog.controller.BlogController.save(BlogController.java:43)\n\tat com.jg.blog.controller.BlogController$$FastClassBySpringCGLIB$$5aabfe8.invoke(<generated>)\n\tat com.jg.blog.aspect.RequestAspect.doAround(RequestAspect.java:61)\n\tat com.jg.blog.controller.BlogController$$EnhancerBySpringCGLIB$$1ae5daa9.save(<generated>)\nCaused by: java.sql.SQLIntegrityConstraintViolationException: Column 'blog_type' cannot be null\n","logMethod":"POST","logParams":"[Blog(blogId=, blogTitle=如何学习java, blogImage=null, blogContent=<p>当你想放弃的时候，往往检查下去就会成功</p>, blogGoods=null, blogRead=null, blogCollection=null, blogType=null, blogRemark=null, blogComment=null, blogSource=null, createdTime=null, updateTime=null, version=null, deleted=null)]","logResult":"{\"code\":20000,\"data\":{\"currentPage\":1,\"index\":0,\"list\":[],\"pageSize\":10,\"params\":{},\"sortColumn\":\"blog_collection\",\"sortMethod\":\"desc\",\"totalCount\":0,\"totalPage\":0},\"msg\":\"操作成功！\"}","logStatus":0,"logTime":0,"logUrl":"/blog/save"}],"pageSize":10,"params":{"logMethod":"","logStatus":""},"sortMethod":"asc","totalCount":12,"totalPage":2},"msg":"操作成功！"}
2021-03-23 13:49:21.867 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/export
2021-03-23 13:49:21.867 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:49:21.867 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:49:21.867 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.export
2021-03-23 13:49:21.869 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[com.alibaba.druid.support.http.WebStatFilter$StatHttpServletResponseWrapper@1bce4d4a]
2021-03-23 13:49:54.473 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/export
2021-03-23 13:49:54.474 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 13:49:54.474 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 13:49:54.474 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.export
2021-03-23 13:49:54.475 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[com.alibaba.druid.support.http.WebStatFilter$StatHttpServletResponseWrapper@7187f12a]
2021-03-23 13:49:54.721 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 248
2021-03-23 13:49:54.721 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：null
2021-03-23 14:11:31.481 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /log/getByPage
2021-03-23 14:11:31.482 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:11:31.482 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:11:31.482 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LogController.getByPage
2021-03-23 14:11:31.483 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2021-03-23 14:11:31.496 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 15
2021-03-23 14:11:31.496 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"createdTime":"2020-12-24 11:06:23","logId":1,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":26566,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:06:42","logId":2,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":16,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:13","logId":3,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=he, password=123456)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":127310,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:09:32","logId":4,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"4FF04EE365817DD68B215F95968DAC30\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":5320,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:10:55","logId":5,"logIp":"192.168.69.137","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":1,"logUrl":"/admin/info"},{"createdTime":"2020-12-24 11:24:28","logId":6,"logIp":"192.168.69.137","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":20,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:26:31","logId":7,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=e10adc3949ba59abbe56e057f20f883e)]","logResult":"{\"code\":40002,\"msg\":\"用户名或密码错误！\"}","logStatus":1,"logTime":10396,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:31","logId":8,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"325CFAD36A27B9B55A812F518E476D4C\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":16783,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":9,"logIp":"127.0.0.1","logMethod":"POST","logParams":"[Admin(id=null, name=null, header=null, signature=null, comment=null, username=admin, password=123456)]","logResult":"{\"code\":20000,\"data\":{\"token\":\"070B5FECB1528984D48B1C5BF38EB338\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":11,"logUrl":"/admin/login"},{"createdTime":"2020-12-24 11:28:43","logId":10,"logIp":"127.0.0.1","logMethod":"GET","logParams":"[]","logResult":"{\"code\":20000,\"data\":{\"name\":\"he\",\"password\":\"\",\"username\":\"admin\"},\"msg\":\"操作成功！\"}","logStatus":1,"logTime":2,"logUrl":"/admin/info"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":301,"totalPage":31},"msg":"操作成功！"}
2021-03-23 14:12:04.373 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /admin/getAdmin
2021-03-23 14:12:04.373 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:12:04.374 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:12:04.374 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.AdminController.getAdmin
2021-03-23 14:12:04.374 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:12:04.383 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 10
2021-03-23 14:12:04.383 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}
2021-03-23 14:17:52.900 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/recomRead
2021-03-23 14:17:52.901 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:17:52.902 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:17:52.902 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.recomRead
2021-03-23 14:17:52.902 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:17:52.908 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /music/getList
2021-03-23 14:17:52.909 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:17:52.909 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:17:52.909 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.MusicController.getList
2021-03-23 14:17:52.909 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:17:52.911 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /link/list
2021-03-23 14:17:52.911 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:17:52.912 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:17:52.912 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LinkController.list
2021-03-23 14:17:52.912 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:17:52.932 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 21
2021-03-23 14:17:52.932 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2021-03-23 14:17:52.938 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 38
2021-03-23 14:17:52.941 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 14:17:53.096 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 14:17:53.100 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:17:53.100 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:17:53.101 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 14:17:53.101 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2021-03-23 14:17:53.174 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 78
2021-03-23 14:17:53.175 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-01-07 14:39:32"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 14:18:09.270 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 14:18:09.270 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /admin/getAdmin
2021-03-23 14:18:09.270 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:18:09.270 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:18:09.270 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:18:09.271 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:18:09.271 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 14:18:09.271 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.AdminController.getAdmin
2021-03-23 14:18:09.271 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2021-03-23 14:18:09.271 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:18:09.282 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 12
2021-03-23 14:18:09.283 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}
2021-03-23 14:18:09.284 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 14
2021-03-23 14:18:09.285 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-01-07 14:39:32"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 14:18:09.318 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/recomRead
2021-03-23 14:18:09.318 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:18:09.319 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:18:09.319 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.recomRead
2021-03-23 14:18:09.319 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:18:09.325 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 7
2021-03-23 14:18:09.325 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 14:18:09.585 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /link/list
2021-03-23 14:18:09.585 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /music/getList
2021-03-23 14:18:09.585 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:18:09.586 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:18:09.586 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:18:09.586 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:18:09.587 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LinkController.list
2021-03-23 14:18:09.587 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.MusicController.getList
2021-03-23 14:18:09.587 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:18:09.587 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:18:09.597 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 12
2021-03-23 14:18:09.598 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2021-03-23 14:22:55.244 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 14:22:55.245 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:22:55.245 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:22:55.245 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 14:22:55.246 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2021-03-23 14:22:55.264 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 20
2021-03-23 14:22:55.265 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-01-07 14:39:32"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 14:22:55.270 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /admin/getAdmin
2021-03-23 14:22:55.270 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:22:55.270 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:22:55.272 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.AdminController.getAdmin
2021-03-23 14:22:55.272 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:22:55.280 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 10
2021-03-23 14:22:55.280 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}
2021-03-23 14:22:55.512 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/recomRead
2021-03-23 14:22:55.512 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:22:55.513 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:22:55.513 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.recomRead
2021-03-23 14:22:55.515 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:22:55.525 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 13
2021-03-23 14:22:55.526 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 14:22:55.582 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /music/getList
2021-03-23 14:22:55.582 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /link/list
2021-03-23 14:22:55.583 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:22:55.583 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:22:55.583 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:22:55.583 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:22:55.583 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LinkController.list
2021-03-23 14:22:55.583 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.MusicController.getList
2021-03-23 14:22:55.583 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:22:55.583 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:22:55.596 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 14
2021-03-23 14:22:55.596 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2021-03-23 14:23:18.317 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 14:23:18.317 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /admin/getAdmin
2021-03-23 14:23:18.318 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:23:18.318 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:23:18.318 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:18.318 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 14:23:18.318 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:18.319 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2021-03-23 14:23:18.319 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.AdminController.getAdmin
2021-03-23 14:23:18.319 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:23:18.332 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 15
2021-03-23 14:23:18.333 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}
2021-03-23 14:23:18.334 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 17
2021-03-23 14:23:18.334 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-01-07 14:39:32"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 14:23:18.638 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/recomRead
2021-03-23 14:23:18.639 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:23:18.639 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:18.639 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.recomRead
2021-03-23 14:23:18.640 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:23:18.640 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /music/getList
2021-03-23 14:23:18.640 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:23:18.641 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:18.641 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.MusicController.getList
2021-03-23 14:23:18.641 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:23:18.643 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /link/list
2021-03-23 14:23:18.644 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:23:18.644 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:18.644 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LinkController.list
2021-03-23 14:23:18.645 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:23:18.649 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 11
2021-03-23 14:23:18.650 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":0,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 14:23:18.666 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 23
2021-03-23 14:23:18.666 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2021-03-23 14:23:26.198 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/read/1347070275481460736
2021-03-23 14:23:26.199 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:23:26.199 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:26.200 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.read
2021-03-23 14:23:26.199 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /comment/getByBlog/1347070275481460736
2021-03-23 14:23:26.200 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[1347070275481460736]
2021-03-23 14:23:26.200 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:23:26.200 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:26.200 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.CommentController.getByBlog
2021-03-23 14:23:26.201 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[1347070275481460736]
2021-03-23 14:23:26.201 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getGood/1347070275481460736
2021-03-23 14:23:26.201 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:23:26.201 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:26.202 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getGood
2021-03-23 14:23:26.202 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[1347070275481460736]
2021-03-23 14:23:26.210 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getCollection/1347070275481460736
2021-03-23 14:23:26.210 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:23:26.210 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:26.211 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getCollection
2021-03-23 14:23:26.211 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[1347070275481460736]
2021-03-23 14:23:26.309 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 111
2021-03-23 14:23:26.309 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"blogCollection":0,"blogComment":0,"blogContent":"<p>哇</p>","blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"},"msg":"操作成功！"}
2021-03-23 14:23:26.523 INFO  [http-nio-1000-exec-8]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:2, serverValue:2581}] to 47.102.115.146:27017
2021-03-23 14:23:39.893 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /type/getList
2021-03-23 14:23:39.893 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:23:39.893 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:39.894 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.TypeController.getList
2021-03-23 14:23:39.895 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:23:39.904 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 11
2021-03-23 14:23:39.904 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 14:23:41.024 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 14:23:41.025 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:23:41.025 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:41.025 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 14:23:41.026 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2021-03-23 14:23:41.039 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 15
2021-03-23 14:23:41.040 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 14:23:42.865 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /type/getList
2021-03-23 14:23:42.865 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:23:42.866 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:42.867 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.TypeController.getList
2021-03-23 14:23:42.867 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:23:42.874 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 9
2021-03-23 14:23:42.874 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 14:23:43.807 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getTimeLine
2021-03-23 14:23:43.807 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:23:43.807 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:43.808 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getTimeLine
2021-03-23 14:23:43.809 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:23:43.824 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 17
2021-03-23 14:23:43.827 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"list":[{"blogId":"1347070275481460736","blogMonth":"2021-01","blogTitle":"12","createdTime":"2021-01-07 14:39:32"}],"month":"2021-01"}],"msg":"操作成功！"}
2021-03-23 14:23:44.953 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /type/getList
2021-03-23 14:23:44.954 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:23:44.954 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:44.954 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.TypeController.getList
2021-03-23 14:23:44.954 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:23:44.963 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 10
2021-03-23 14:23:44.964 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 14:23:45.369 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /about/read
2021-03-23 14:23:45.369 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:23:45.369 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:45.370 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.AboutController.read
2021-03-23 14:23:45.370 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:23:46.100 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getTimeLine
2021-03-23 14:23:46.100 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:23:46.101 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:46.101 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getTimeLine
2021-03-23 14:23:46.101 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:23:46.111 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 11
2021-03-23 14:23:46.112 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"list":[{"blogId":"1347070275481460736","blogMonth":"2021-01","blogTitle":"12","createdTime":"2021-01-07 14:39:32"}],"month":"2021-01"}],"msg":"操作成功！"}
2021-03-23 14:23:46.350 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /type/getList
2021-03-23 14:23:46.350 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:23:46.350 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:46.351 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.TypeController.getList
2021-03-23 14:23:46.351 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:23:46.359 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 9
2021-03-23 14:23:46.360 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"typeBlogCount":1,"typeId":6,"typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 14:23:46.702 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 14:23:46.703 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:23:46.703 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:46.703 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 14:23:46.703 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2021-03-23 14:23:46.718 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 16
2021-03-23 14:23:46.719 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 14:23:49.443 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 14:23:49.444 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:23:49.444 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:49.445 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 14:23:49.446 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1347070275481460736, blogTitle=12, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java基础知识, blogSource=null, blogRemark=ww, blogComment=0, blogMonth=null, createdTime=2021-01-07 14:39:32, updateTime=2021-03-23 14:23:26)], params={}, sortColumn=blog_goods, sortMethod=desc)]
2021-03-23 14:23:49.462 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 19
2021-03-23 14:23:49.463 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 14:23:50.234 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 14:23:50.235 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:23:50.235 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:50.235 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 14:23:50.236 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1347070275481460736, blogTitle=12, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java基础知识, blogSource=null, blogRemark=ww, blogComment=0, blogMonth=null, createdTime=2021-01-07 14:39:32, updateTime=2021-03-23 14:23:26)], params={}, sortColumn=blog_comment, sortMethod=desc)]
2021-03-23 14:23:50.249 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 15
2021-03-23 14:23:50.249 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 14:23:51.350 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 14:23:51.351 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:23:51.351 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:51.351 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 14:23:51.351 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1347070275481460736, blogTitle=12, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java基础知识, blogSource=null, blogRemark=ww, blogComment=0, blogMonth=null, createdTime=2021-01-07 14:39:32, updateTime=2021-03-23 14:23:26)], params={}, sortColumn=blog_read, sortMethod=desc)]
2021-03-23 14:23:51.367 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 17
2021-03-23 14:23:51.368 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 14:23:52.537 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 14:23:52.538 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:23:52.539 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:52.539 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 14:23:52.540 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1347070275481460736, blogTitle=12, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java基础知识, blogSource=null, blogRemark=ww, blogComment=0, blogMonth=null, createdTime=2021-01-07 14:39:32, updateTime=2021-03-23 14:23:26)], params={}, sortColumn=created_time, sortMethod=desc)]
2021-03-23 14:23:52.550 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 13
2021-03-23 14:23:52.550 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 14:23:52.860 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 14:23:52.861 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:23:52.861 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:52.861 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 14:23:52.862 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1347070275481460736, blogTitle=12, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java基础知识, blogSource=null, blogRemark=ww, blogComment=0, blogMonth=null, createdTime=2021-01-07 14:39:32, updateTime=2021-03-23 14:23:26)], params={}, sortColumn=blog_goods, sortMethod=desc)]
2021-03-23 14:23:52.879 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 19
2021-03-23 14:23:52.879 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 14:23:53.595 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 14:23:53.596 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:23:53.596 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:53.596 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 14:23:53.596 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1347070275481460736, blogTitle=12, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java基础知识, blogSource=null, blogRemark=ww, blogComment=0, blogMonth=null, createdTime=2021-01-07 14:39:32, updateTime=2021-03-23 14:23:26)], params={}, sortColumn=blog_comment, sortMethod=desc)]
2021-03-23 14:23:53.610 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 15
2021-03-23 14:23:53.611 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 14:23:53.847 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 14:23:53.847 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:23:53.848 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:53.848 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 14:23:53.848 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1347070275481460736, blogTitle=12, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java基础知识, blogSource=null, blogRemark=ww, blogComment=0, blogMonth=null, createdTime=2021-01-07 14:39:32, updateTime=2021-03-23 14:23:26)], params={}, sortColumn=blog_collection, sortMethod=desc)]
2021-03-23 14:23:53.861 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 14
2021-03-23 14:23:53.862 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"blog_collection","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 14:23:54.215 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 14:23:54.215 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:23:54.216 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:54.216 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 14:23:54.217 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1347070275481460736, blogTitle=12, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java基础知识, blogSource=null, blogRemark=ww, blogComment=0, blogMonth=null, createdTime=2021-01-07 14:39:32, updateTime=2021-03-23 14:23:26)], params={}, sortColumn=blog_read, sortMethod=desc)]
2021-03-23 14:23:54.230 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 15
2021-03-23 14:23:54.231 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"blog_read","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 14:23:54.978 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 14:23:54.979 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:23:54.979 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:54.979 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 14:23:54.979 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1347070275481460736, blogTitle=12, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java基础知识, blogSource=null, blogRemark=ww, blogComment=0, blogMonth=null, createdTime=2021-01-07 14:39:32, updateTime=2021-03-23 14:23:26)], params={}, sortColumn=blog_comment, sortMethod=desc)]
2021-03-23 14:23:54.990 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 12
2021-03-23 14:23:54.991 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"blog_comment","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 14:23:55.230 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 14:23:55.231 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:23:55.231 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:23:55.231 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 14:23:55.232 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=1, totalCount=1, list=[BlogVo(blogId=1347070275481460736, blogTitle=12, blogImage=null, blogContent=null, blogGoods=0, blogRead=1, blogCollection=0, typeName=java基础知识, blogSource=null, blogRemark=ww, blogComment=0, blogMonth=null, createdTime=2021-01-07 14:39:32, updateTime=2021-03-23 14:23:26)], params={}, sortColumn=blog_goods, sortMethod=desc)]
2021-03-23 14:23:55.242 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 12
2021-03-23 14:23:55.242 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"blog_goods","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 14:24:58.959 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /user/login
2021-03-23 14:24:58.959 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:24:58.960 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:24:58.960 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.UserController.login
2021-03-23 14:24:58.960 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[User(userId=null, username=null, password=null, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2021-03-23 14:24:58.965 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 6
2021-03-23 14:24:58.965 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":40002,"msg":"用户名或密码错误！"}
2021-03-23 14:24:59.185 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /user/login
2021-03-23 14:24:59.185 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:24:59.185 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:24:59.186 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.UserController.login
2021-03-23 14:24:59.187 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[User(userId=null, username=null, password=null, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2021-03-23 14:24:59.187 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 2
2021-03-23 14:24:59.187 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":40002,"msg":"用户名或密码错误！"}
2021-03-23 14:25:04.268 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /user/login
2021-03-23 14:25:04.268 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:25:04.268 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:25:04.268 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.UserController.login
2021-03-23 14:25:04.269 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[User(userId=null, username=he, password=123456, name=null, sex=null, header=null, nickname=null, userEmail=null, createdTime=null, updateTime=null, version=null, deleted=null)]
2021-03-23 14:25:04.278 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 10
2021-03-23 14:25:04.283 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"user":{"nickname":"鲜肉","password":"","sex":1,"userId":1,"username":"he"},"token":"CAB4384B63861B97D5A79EA8C47C9619"},"msg":"操作成功！"}
2021-03-23 14:25:04.658 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 14:25:04.659 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:25:04.659 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:25:04.660 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 14:25:04.660 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2021-03-23 14:25:04.671 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 13
2021-03-23 14:25:04.671 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 14:25:04.685 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /admin/getAdmin
2021-03-23 14:25:04.685 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:25:04.686 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:25:04.686 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.AdminController.getAdmin
2021-03-23 14:25:04.686 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:25:04.694 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 9
2021-03-23 14:25:04.695 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}
2021-03-23 14:25:04.728 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/recomRead
2021-03-23 14:25:04.728 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:25:04.729 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:25:04.729 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.recomRead
2021-03-23 14:25:04.729 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:25:04.736 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 8
2021-03-23 14:25:04.736 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 14:25:04.785 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /music/getList
2021-03-23 14:25:04.786 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:25:04.786 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:25:04.786 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.MusicController.getList
2021-03-23 14:25:04.786 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:25:04.793 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /link/list
2021-03-23 14:25:04.793 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:25:04.793 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:25:04.793 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LinkController.list
2021-03-23 14:25:04.793 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:25:04.799 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 6
2021-03-23 14:25:04.800 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2021-03-23 14:25:48.204 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 14:25:48.205 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:25:48.205 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:25:48.205 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 14:25:48.206 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2021-03-23 14:25:48.212 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /admin/getAdmin
2021-03-23 14:25:48.213 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:25:48.213 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:25:48.214 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.AdminController.getAdmin
2021-03-23 14:25:48.214 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:25:48.221 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 17
2021-03-23 14:25:48.221 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 14:25:48.223 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 11
2021-03-23 14:25:48.223 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}
2021-03-23 14:25:48.466 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/recomRead
2021-03-23 14:25:48.467 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:25:48.467 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:25:48.467 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.recomRead
2021-03-23 14:25:48.468 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:25:48.475 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 9
2021-03-23 14:25:48.475 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 14:25:48.569 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /music/getList
2021-03-23 14:25:48.569 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:25:48.570 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /link/list
2021-03-23 14:25:48.570 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:25:48.570 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:25:48.570 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.MusicController.getList
2021-03-23 14:25:48.570 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:25:48.570 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:25:48.570 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LinkController.list
2021-03-23 14:25:48.570 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:25:48.583 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 13
2021-03-23 14:25:48.584 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2021-03-23 14:26:26.907 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 14:26:26.907 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 14:26:26.907 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:26:26.908 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 14:26:26.908 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2021-03-23 14:26:26.910 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /admin/getAdmin
2021-03-23 14:26:26.910 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:26:26.911 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:26:26.911 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/recomRead
2021-03-23 14:26:26.911 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.AdminController.getAdmin
2021-03-23 14:26:26.911 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:26:26.911 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:26:26.911 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:26:26.911 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.recomRead
2021-03-23 14:26:26.912 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:26:26.920 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 9
2021-03-23 14:26:26.920 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 14:26:26.921 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 14
2021-03-23 14:26:26.921 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 14:26:26.922 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 12
2021-03-23 14:26:26.922 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"id":1,"name":"he","username":"admin"},"msg":"操作成功！"}
2021-03-23 14:26:27.136 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /music/getList
2021-03-23 14:26:27.136 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:26:27.136 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:26:27.137 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.MusicController.getList
2021-03-23 14:26:27.137 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:26:27.214 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /link/list
2021-03-23 14:26:27.214 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 14:26:27.214 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 14:26:27.215 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LinkController.list
2021-03-23 14:26:27.215 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 14:26:27.220 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 6
2021-03-23 14:26:27.221 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2021-03-23 15:06:30.282 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 15:06:30.283 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 15:06:30.284 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:06:30.284 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 15:06:30.284 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2021-03-23 15:06:30.328 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 46
2021-03-23 15:06:30.328 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 15:06:30.624 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/recomRead
2021-03-23 15:06:30.625 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 15:06:30.625 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:06:30.626 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.recomRead
2021-03-23 15:06:30.627 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 15:06:30.635 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /music/getList
2021-03-23 15:06:30.635 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 15:06:30.636 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:06:30.636 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /link/list
2021-03-23 15:06:30.636 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.MusicController.getList
2021-03-23 15:06:30.636 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 15:06:30.636 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 12
2021-03-23 15:06:30.636 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 15:06:30.636 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:06:30.636 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 15:06:30.636 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LinkController.list
2021-03-23 15:06:30.637 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 15:06:30.660 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 24
2021-03-23 15:06:30.660 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2021-03-23 15:06:35.721 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 15:06:35.722 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 15:06:35.722 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:06:35.722 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/recomRead
2021-03-23 15:06:35.722 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 15:06:35.723 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 15:06:35.723 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2021-03-23 15:06:35.723 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:06:35.723 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.recomRead
2021-03-23 15:06:35.723 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 15:06:35.738 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 16
2021-03-23 15:06:35.739 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 15:06:35.739 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 18
2021-03-23 15:06:35.739 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 15:06:36.031 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /music/getList
2021-03-23 15:06:36.032 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 15:06:36.032 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /link/list
2021-03-23 15:06:36.032 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:06:36.032 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 15:06:36.033 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.MusicController.getList
2021-03-23 15:06:36.033 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:06:36.033 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 15:06:36.033 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LinkController.list
2021-03-23 15:06:36.033 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 15:06:36.045 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 13
2021-03-23 15:06:36.045 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2021-03-23 15:06:45.061 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 15:06:45.062 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 15:06:45.062 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:06:45.062 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 15:06:45.062 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2021-03-23 15:06:45.066 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/recomRead
2021-03-23 15:06:45.066 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 15:06:45.068 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:06:45.069 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.recomRead
2021-03-23 15:06:45.070 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 15:06:45.077 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 16
2021-03-23 15:06:45.079 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 15:06:45.080 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 14
2021-03-23 15:06:45.081 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 15:06:45.365 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /music/getList
2021-03-23 15:06:45.365 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 15:06:45.365 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:06:45.366 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.MusicController.getList
2021-03-23 15:06:45.366 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 15:06:45.369 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /link/list
2021-03-23 15:06:45.370 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 15:06:45.370 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:06:45.370 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LinkController.list
2021-03-23 15:06:45.370 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 15:06:45.380 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 11
2021-03-23 15:06:45.381 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2021-03-23 15:08:17.899 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 15:08:17.901 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 15:08:17.901 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:08:17.901 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 15:08:17.901 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2021-03-23 15:08:17.915 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 16
2021-03-23 15:08:17.916 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 15:08:18.207 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/recomRead
2021-03-23 15:08:18.208 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 15:08:18.208 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:08:18.208 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.recomRead
2021-03-23 15:08:18.208 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 15:08:18.217 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /music/getList
2021-03-23 15:08:18.218 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 15:08:18.218 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 11
2021-03-23 15:08:18.218 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:08:18.218 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 15:08:18.218 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.MusicController.getList
2021-03-23 15:08:18.218 INFO  [http-nio-1000-exec-6]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 15:08:18.237 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /link/list
2021-03-23 15:08:18.237 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 15:08:18.238 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:08:18.238 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LinkController.list
2021-03-23 15:08:18.238 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 15:08:18.247 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 10
2021-03-23 15:08:18.247 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2021-03-23 15:08:35.829 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 15:08:35.829 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 15:08:35.829 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:08:35.830 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 15:08:35.830 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2021-03-23 15:08:35.837 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/recomRead
2021-03-23 15:08:35.838 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 15:08:35.838 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:08:35.839 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.recomRead
2021-03-23 15:08:35.839 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 15:08:35.840 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /link/list
2021-03-23 15:08:35.841 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 15:08:35.841 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:08:35.841 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LinkController.list
2021-03-23 15:08:35.843 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 14
2021-03-23 15:08:35.843 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 15:08:35.843 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 15:08:35.844 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /music/getList
2021-03-23 15:08:35.845 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 15:08:35.845 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:08:35.845 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.MusicController.getList
2021-03-23 15:08:35.847 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 10
2021-03-23 15:08:35.848 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 15:08:35.845 INFO  [http-nio-1000-exec-9]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 15:08:35.863 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 23
2021-03-23 15:08:35.863 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2021-03-23 15:12:58.867 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 15:12:58.868 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 15:12:58.868 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:12:58.868 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 15:12:58.869 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2021-03-23 15:12:58.882 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 15
2021-03-23 15:12:58.882 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 15:12:59.190 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/recomRead
2021-03-23 15:12:59.191 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /link/list
2021-03-23 15:12:59.191 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 15:12:59.191 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 15:12:59.191 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:12:59.191 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /music/getList
2021-03-23 15:12:59.192 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:12:59.192 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.recomRead
2021-03-23 15:12:59.192 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 15:12:59.192 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 15:12:59.192 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LinkController.list
2021-03-23 15:12:59.192 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:12:59.192 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 15:12:59.192 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.MusicController.getList
2021-03-23 15:12:59.192 INFO  [http-nio-1000-exec-1]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 15:12:59.205 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 15
2021-03-23 15:12:59.205 INFO  [http-nio-1000-exec-5]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 15:12:59.206 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 15
2021-03-23 15:12:59.206 INFO  [http-nio-1000-exec-4]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2021-03-23 15:13:03.033 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 15:13:03.034 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 15:13:03.034 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:13:03.036 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 15:13:03.038 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=created_time, sortMethod=desc)]
2021-03-23 15:13:03.040 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /link/list
2021-03-23 15:13:03.040 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 15:13:03.040 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:13:03.040 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /music/getList
2021-03-23 15:13:03.041 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.LinkController.list
2021-03-23 15:13:03.041 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 15:13:03.041 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 15:13:03.041 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:13:03.041 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/recomRead
2021-03-23 15:13:03.041 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.MusicController.getList
2021-03-23 15:13:03.041 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : GET
2021-03-23 15:13:03.042 INFO  [http-nio-1000-exec-3]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 15:13:03.042 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:13:03.042 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.recomRead
2021-03-23 15:13:03.042 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[]
2021-03-23 15:13:03.061 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 21
2021-03-23 15:13:03.061 INFO  [http-nio-1000-exec-8]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[],"msg":"操作成功！"}
2021-03-23 15:13:03.063 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 30
2021-03-23 15:13:03.063 INFO  [http-nio-1000-exec-7]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortColumn":"created_time","sortMethod":"desc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 15:13:03.069 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 28
2021-03-23 15:13:03.069 INFO  [http-nio-1000-exec-10]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识"}],"msg":"操作成功！"}
2021-03-23 15:13:19.579 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:108 -请求地址 : /blog/getByPage
2021-03-23 15:13:19.579 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:109 -请求方式 : POST
2021-03-23 15:13:19.579 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:112 -IP : 127.0.0.1
2021-03-23 15:13:19.580 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:114 -方法 : com.jg.blog.controller.BlogController.getByPage
2021-03-23 15:13:19.580 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.printRequestLog:116 -请求参数：[Page(currentPage=1, pageSize=10, totalPage=0, totalCount=0, list=[], params={}, sortColumn=null, sortMethod=asc)]
2021-03-23 15:13:19.593 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAround:63 -耗时 : 14
2021-03-23 15:13:19.593 INFO  [http-nio-1000-exec-2]com.jg.blog.aspect.RequestAspect.doAfterReturning:77 -返回值：{"code":20000,"data":{"currentPage":1,"index":0,"list":[{"blogCollection":0,"blogComment":0,"blogGoods":0,"blogId":"1347070275481460736","blogRead":1,"blogRemark":"ww","blogTitle":"12","createdTime":"2021-01-07 14:39:32","typeName":"java基础知识","updateTime":"2021-03-23 14:23:26"}],"pageSize":10,"params":{},"sortMethod":"asc","totalCount":1,"totalPage":1},"msg":"操作成功！"}
2021-03-23 16:04:49.454 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2021-03-23 16:04:49.469 INFO  [SpringContextShutdownHook]org.mongodb.driver.connection.info:71 -Closed connection [connectionId{localValue:2, serverValue:2581}] to 47.102.115.146:27017 because the pool has been closed.
2021-03-23 16:04:49.486 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
